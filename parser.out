Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> sentencias
Rule 1     sentencias -> variable sentencias
Rule 2     sentencias -> metodos sentencias
Rule 3     sentencias -> iteracion sentencias
Rule 4     sentencias -> objeto PUNTOYCOMA sentencias
Rule 5     sentencias -> newset sentencias
Rule 6     sentencias -> array sentencias
Rule 7     sentencias -> empty
Rule 8     sentencias -> if sentencias
Rule 9     sentencias -> while sentencias
Rule 10    sentencias -> prompt sentencias
Rule 11    metodos -> imprimir PUNTOYCOMA
Rule 12    metodos -> metodo PUNTOYCOMA
Rule 13    variable -> VAR ID PUNTOYCOMA
Rule 14    variable -> VAR ID IGUAL expresion PUNTOYCOMA
Rule 15    variable -> VAR ID IGUAL condi_anidado PUNTOYCOMA
Rule 16    iteracion -> FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE
Rule 17    iteracion -> FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE
Rule 18    iteracion -> FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE
Rule 19    iteracion -> FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE
Rule 20    if -> IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE
Rule 21    if -> IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE else
Rule 22    if -> IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif
Rule 23    if -> IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif else
Rule 24    else -> ELSE LLLAVE sentencias RLLAVE
Rule 25    elif -> ELIF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif
Rule 26    elif -> ELIF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE
Rule 27    while -> WHILE LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE
Rule 28    prompt -> VAR ID IGUAL PROMPT LPAREN expresion RPAREN PUNTOYCOMA
Rule 29    prompt -> VAR ID IGUAL PROMPT LPAREN expresion COMA expresion RPAREN PUNTOYCOMA
Rule 30    imprimir -> CONSOLE METODO LPAREN expresion RPAREN
Rule 31    metodo -> ID METODO LPAREN RPAREN
Rule 32    metodo -> ID METODO LPAREN expresion RPAREN
Rule 33    metodo -> ID METODO LPAREN expresion COMA expresion RPAREN
Rule 34    metodo -> ID METODO
Rule 35    objeto -> VAR ID IGUAL LLLAVE RLLAVE
Rule 36    objeto -> VAR ID IGUAL LLLAVE keyvalue RLLAVE
Rule 37    keyvalue -> ID DOSPUNTOS factor
Rule 38    keyvalue -> ID DOSPUNTOS factor COMA keyvalue
Rule 39    keyvalue -> ID DOSPUNTOS contenido
Rule 40    keyvalue -> ID DOSPUNTOS contenido COMA keyvalue
Rule 41    keyvalue -> ID DOSPUNTOS TRUE
Rule 42    keyvalue -> ID DOSPUNTOS TRUE COMA keyvalue
Rule 43    keyvalue -> ID DOSPUNTOS FALSE
Rule 44    keyvalue -> ID DOSPUNTOS FALSE COMA keyvalue
Rule 45    newset -> VAR ID IGUAL NEW SET LPAREN RPAREN PUNTOYCOMA
Rule 46    newset -> VAR ID IGUAL NEW SET LPAREN contenido RPAREN PUNTOYCOMA
Rule 47    array -> VAR ID IGUAL contenido PUNTOYCOMA
Rule 48    array -> VAR ID IGUAL NEW ARRAY LPAREN elemento RPAREN PUNTOYCOMA
Rule 49    contenido -> LCORCH elemento RCORCH
Rule 50    contenido -> LCORCH RCORCH
Rule 51    contenido -> LCORCH expresion RCORCH
Rule 52    elemento -> expresion
Rule 53    elemento -> expresion COMA elemento
Rule 54    expresion -> expresion PLUS factor
Rule 55    expresion -> expresion MINUS term
Rule 56    expresion -> expresion TIMES term
Rule 57    expresion -> expresion DIVIDE term
Rule 58    expresion -> expresion POTENCIA term
Rule 59    expresion -> term
Rule 60    condi_anidado -> condicion AND condi_anidado
Rule 61    condi_anidado -> NOT condicion AND condi_anidado
Rule 62    condi_anidado -> condicion OR condi_anidado
Rule 63    condi_anidado -> NOT condicion OR condi_anidado
Rule 64    condi_anidado -> condicion
Rule 65    condi_anidado -> NOT condicion
Rule 66    condicion -> factor COMPARADOR factor
Rule 67    condicion -> factor IGUALA factor
Rule 68    condicion -> factor DIFERENTE factor
Rule 69    condicion -> TRUE
Rule 70    condicion -> FALSE
Rule 71    term -> factor
Rule 72    factor -> LPAREN expresion RPAREN
Rule 73    factor -> NUMBER
Rule 74    factor -> TEXTO
Rule 75    factor -> ID
Rule 76    empty -> <empty>

Terminals, with rules where they appear

AND                  : 60 61
ARRAY                : 48
COMA                 : 29 33 38 40 42 44 53
COMPARADOR           : 66
CONSOLE              : 30
DIFERENTE            : 68
DIVIDE               : 57
DOSPUNTOS            : 37 38 39 40 41 42 43 44
ELIF                 : 25 26
ELSE                 : 24
FALSE                : 43 44 70
FOR                  : 16 17 18 19
ID                   : 13 14 15 16 16 17 17 18 18 19 19 28 29 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 75
IF                   : 20 21 22 23
IGUAL                : 14 15 16 17 18 19 28 29 35 36 45 46 47 48
IGUALA               : 67
INDECREMENTAL        : 16 17
LCORCH               : 49 50 51
LLLAVE               : 16 17 18 19 20 21 22 23 24 25 26 27 35 36
LPAREN               : 16 17 18 19 20 21 22 23 25 26 27 28 29 30 31 32 33 45 46 48 72
METODO               : 30 31 32 33 34
MINUS                : 55
NEW                  : 45 46 48
NOT                  : 61 63 65
NUMBER               : 16 17 18 18 19 19 73
OPERADORES           : 18 19
OR                   : 62 63
PLUS                 : 54
POTENCIA             : 58
PROMPT               : 28 29
PUNTOYCOMA           : 4 11 12 13 14 15 16 16 17 17 18 18 19 19 28 29 45 46 47 48
RCORCH               : 49 50 51
RLLAVE               : 16 17 18 19 20 21 22 23 24 25 26 27 35 36
RPAREN               : 16 17 18 19 20 21 22 23 25 26 27 28 29 30 31 32 33 45 46 48 72
SET                  : 45 46
TEXTO                : 74
TIMES                : 56
TRUE                 : 41 42 69
VAR                  : 13 14 15 17 19 28 29 35 36 45 46 47 48
WHILE                : 27
error                : 

Nonterminals, with rules where they appear

array                : 6
condi_anidado        : 15 20 21 22 23 25 26 27 60 61 62 63
condicion            : 16 17 18 19 60 61 62 63 64 65
contenido            : 39 40 46 47
elemento             : 48 49 53
elif                 : 22 23 25
else                 : 21 23
empty                : 7
expresion            : 14 28 29 29 30 32 33 33 51 52 53 54 55 56 57 58 72
factor               : 37 38 54 66 66 67 67 68 68 71
if                   : 8
imprimir             : 11
iteracion            : 3
keyvalue             : 36 38 40 42 44
metodo               : 12
metodos              : 2
newset               : 5
objeto               : 4
prompt               : 10
sentencias           : 1 2 3 4 5 6 8 9 10 16 17 18 19 20 21 22 23 24 25 26 27 0
term                 : 55 56 57 58 59
variable             : 1
while                : 9

Parsing method: LALR

state 0

    (0) S' -> . sentencias
    (1) sentencias -> . variable sentencias
    (2) sentencias -> . metodos sentencias
    (3) sentencias -> . iteracion sentencias
    (4) sentencias -> . objeto PUNTOYCOMA sentencias
    (5) sentencias -> . newset sentencias
    (6) sentencias -> . array sentencias
    (7) sentencias -> . empty
    (8) sentencias -> . if sentencias
    (9) sentencias -> . while sentencias
    (10) sentencias -> . prompt sentencias
    (13) variable -> . VAR ID PUNTOYCOMA
    (14) variable -> . VAR ID IGUAL expresion PUNTOYCOMA
    (15) variable -> . VAR ID IGUAL condi_anidado PUNTOYCOMA
    (11) metodos -> . imprimir PUNTOYCOMA
    (12) metodos -> . metodo PUNTOYCOMA
    (16) iteracion -> . FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE
    (17) iteracion -> . FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE
    (18) iteracion -> . FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE
    (19) iteracion -> . FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE
    (35) objeto -> . VAR ID IGUAL LLLAVE RLLAVE
    (36) objeto -> . VAR ID IGUAL LLLAVE keyvalue RLLAVE
    (45) newset -> . VAR ID IGUAL NEW SET LPAREN RPAREN PUNTOYCOMA
    (46) newset -> . VAR ID IGUAL NEW SET LPAREN contenido RPAREN PUNTOYCOMA
    (47) array -> . VAR ID IGUAL contenido PUNTOYCOMA
    (48) array -> . VAR ID IGUAL NEW ARRAY LPAREN elemento RPAREN PUNTOYCOMA
    (76) empty -> .
    (20) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE
    (21) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE else
    (22) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif
    (23) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif else
    (27) while -> . WHILE LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE
    (28) prompt -> . VAR ID IGUAL PROMPT LPAREN expresion RPAREN PUNTOYCOMA
    (29) prompt -> . VAR ID IGUAL PROMPT LPAREN expresion COMA expresion RPAREN PUNTOYCOMA
    (30) imprimir -> . CONSOLE METODO LPAREN expresion RPAREN
    (31) metodo -> . ID METODO LPAREN RPAREN
    (32) metodo -> . ID METODO LPAREN expresion RPAREN
    (33) metodo -> . ID METODO LPAREN expresion COMA expresion RPAREN
    (34) metodo -> . ID METODO

    VAR             shift and go to state 12
    FOR             shift and go to state 16
    $end            reduce using rule 76 (empty -> .)
    IF              shift and go to state 17
    WHILE           shift and go to state 18
    CONSOLE         shift and go to state 19
    ID              shift and go to state 13

    sentencias                     shift and go to state 1
    variable                       shift and go to state 2
    metodos                        shift and go to state 3
    iteracion                      shift and go to state 4
    objeto                         shift and go to state 5
    newset                         shift and go to state 6
    array                          shift and go to state 7
    empty                          shift and go to state 8
    if                             shift and go to state 9
    while                          shift and go to state 10
    prompt                         shift and go to state 11
    imprimir                       shift and go to state 14
    metodo                         shift and go to state 15

state 1

    (0) S' -> sentencias .



state 2

    (1) sentencias -> variable . sentencias
    (1) sentencias -> . variable sentencias
    (2) sentencias -> . metodos sentencias
    (3) sentencias -> . iteracion sentencias
    (4) sentencias -> . objeto PUNTOYCOMA sentencias
    (5) sentencias -> . newset sentencias
    (6) sentencias -> . array sentencias
    (7) sentencias -> . empty
    (8) sentencias -> . if sentencias
    (9) sentencias -> . while sentencias
    (10) sentencias -> . prompt sentencias
    (13) variable -> . VAR ID PUNTOYCOMA
    (14) variable -> . VAR ID IGUAL expresion PUNTOYCOMA
    (15) variable -> . VAR ID IGUAL condi_anidado PUNTOYCOMA
    (11) metodos -> . imprimir PUNTOYCOMA
    (12) metodos -> . metodo PUNTOYCOMA
    (16) iteracion -> . FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE
    (17) iteracion -> . FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE
    (18) iteracion -> . FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE
    (19) iteracion -> . FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE
    (35) objeto -> . VAR ID IGUAL LLLAVE RLLAVE
    (36) objeto -> . VAR ID IGUAL LLLAVE keyvalue RLLAVE
    (45) newset -> . VAR ID IGUAL NEW SET LPAREN RPAREN PUNTOYCOMA
    (46) newset -> . VAR ID IGUAL NEW SET LPAREN contenido RPAREN PUNTOYCOMA
    (47) array -> . VAR ID IGUAL contenido PUNTOYCOMA
    (48) array -> . VAR ID IGUAL NEW ARRAY LPAREN elemento RPAREN PUNTOYCOMA
    (76) empty -> .
    (20) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE
    (21) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE else
    (22) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif
    (23) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif else
    (27) while -> . WHILE LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE
    (28) prompt -> . VAR ID IGUAL PROMPT LPAREN expresion RPAREN PUNTOYCOMA
    (29) prompt -> . VAR ID IGUAL PROMPT LPAREN expresion COMA expresion RPAREN PUNTOYCOMA
    (30) imprimir -> . CONSOLE METODO LPAREN expresion RPAREN
    (31) metodo -> . ID METODO LPAREN RPAREN
    (32) metodo -> . ID METODO LPAREN expresion RPAREN
    (33) metodo -> . ID METODO LPAREN expresion COMA expresion RPAREN
    (34) metodo -> . ID METODO

    VAR             shift and go to state 12
    FOR             shift and go to state 16
    $end            reduce using rule 76 (empty -> .)
    RLLAVE          reduce using rule 76 (empty -> .)
    IF              shift and go to state 17
    WHILE           shift and go to state 18
    CONSOLE         shift and go to state 19
    ID              shift and go to state 13

    variable                       shift and go to state 2
    sentencias                     shift and go to state 20
    metodos                        shift and go to state 3
    iteracion                      shift and go to state 4
    objeto                         shift and go to state 5
    newset                         shift and go to state 6
    array                          shift and go to state 7
    empty                          shift and go to state 8
    if                             shift and go to state 9
    while                          shift and go to state 10
    prompt                         shift and go to state 11
    imprimir                       shift and go to state 14
    metodo                         shift and go to state 15

state 3

    (2) sentencias -> metodos . sentencias
    (1) sentencias -> . variable sentencias
    (2) sentencias -> . metodos sentencias
    (3) sentencias -> . iteracion sentencias
    (4) sentencias -> . objeto PUNTOYCOMA sentencias
    (5) sentencias -> . newset sentencias
    (6) sentencias -> . array sentencias
    (7) sentencias -> . empty
    (8) sentencias -> . if sentencias
    (9) sentencias -> . while sentencias
    (10) sentencias -> . prompt sentencias
    (13) variable -> . VAR ID PUNTOYCOMA
    (14) variable -> . VAR ID IGUAL expresion PUNTOYCOMA
    (15) variable -> . VAR ID IGUAL condi_anidado PUNTOYCOMA
    (11) metodos -> . imprimir PUNTOYCOMA
    (12) metodos -> . metodo PUNTOYCOMA
    (16) iteracion -> . FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE
    (17) iteracion -> . FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE
    (18) iteracion -> . FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE
    (19) iteracion -> . FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE
    (35) objeto -> . VAR ID IGUAL LLLAVE RLLAVE
    (36) objeto -> . VAR ID IGUAL LLLAVE keyvalue RLLAVE
    (45) newset -> . VAR ID IGUAL NEW SET LPAREN RPAREN PUNTOYCOMA
    (46) newset -> . VAR ID IGUAL NEW SET LPAREN contenido RPAREN PUNTOYCOMA
    (47) array -> . VAR ID IGUAL contenido PUNTOYCOMA
    (48) array -> . VAR ID IGUAL NEW ARRAY LPAREN elemento RPAREN PUNTOYCOMA
    (76) empty -> .
    (20) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE
    (21) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE else
    (22) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif
    (23) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif else
    (27) while -> . WHILE LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE
    (28) prompt -> . VAR ID IGUAL PROMPT LPAREN expresion RPAREN PUNTOYCOMA
    (29) prompt -> . VAR ID IGUAL PROMPT LPAREN expresion COMA expresion RPAREN PUNTOYCOMA
    (30) imprimir -> . CONSOLE METODO LPAREN expresion RPAREN
    (31) metodo -> . ID METODO LPAREN RPAREN
    (32) metodo -> . ID METODO LPAREN expresion RPAREN
    (33) metodo -> . ID METODO LPAREN expresion COMA expresion RPAREN
    (34) metodo -> . ID METODO

    VAR             shift and go to state 12
    FOR             shift and go to state 16
    $end            reduce using rule 76 (empty -> .)
    RLLAVE          reduce using rule 76 (empty -> .)
    IF              shift and go to state 17
    WHILE           shift and go to state 18
    CONSOLE         shift and go to state 19
    ID              shift and go to state 13

    metodos                        shift and go to state 3
    sentencias                     shift and go to state 21
    variable                       shift and go to state 2
    iteracion                      shift and go to state 4
    objeto                         shift and go to state 5
    newset                         shift and go to state 6
    array                          shift and go to state 7
    empty                          shift and go to state 8
    if                             shift and go to state 9
    while                          shift and go to state 10
    prompt                         shift and go to state 11
    imprimir                       shift and go to state 14
    metodo                         shift and go to state 15

state 4

    (3) sentencias -> iteracion . sentencias
    (1) sentencias -> . variable sentencias
    (2) sentencias -> . metodos sentencias
    (3) sentencias -> . iteracion sentencias
    (4) sentencias -> . objeto PUNTOYCOMA sentencias
    (5) sentencias -> . newset sentencias
    (6) sentencias -> . array sentencias
    (7) sentencias -> . empty
    (8) sentencias -> . if sentencias
    (9) sentencias -> . while sentencias
    (10) sentencias -> . prompt sentencias
    (13) variable -> . VAR ID PUNTOYCOMA
    (14) variable -> . VAR ID IGUAL expresion PUNTOYCOMA
    (15) variable -> . VAR ID IGUAL condi_anidado PUNTOYCOMA
    (11) metodos -> . imprimir PUNTOYCOMA
    (12) metodos -> . metodo PUNTOYCOMA
    (16) iteracion -> . FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE
    (17) iteracion -> . FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE
    (18) iteracion -> . FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE
    (19) iteracion -> . FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE
    (35) objeto -> . VAR ID IGUAL LLLAVE RLLAVE
    (36) objeto -> . VAR ID IGUAL LLLAVE keyvalue RLLAVE
    (45) newset -> . VAR ID IGUAL NEW SET LPAREN RPAREN PUNTOYCOMA
    (46) newset -> . VAR ID IGUAL NEW SET LPAREN contenido RPAREN PUNTOYCOMA
    (47) array -> . VAR ID IGUAL contenido PUNTOYCOMA
    (48) array -> . VAR ID IGUAL NEW ARRAY LPAREN elemento RPAREN PUNTOYCOMA
    (76) empty -> .
    (20) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE
    (21) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE else
    (22) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif
    (23) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif else
    (27) while -> . WHILE LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE
    (28) prompt -> . VAR ID IGUAL PROMPT LPAREN expresion RPAREN PUNTOYCOMA
    (29) prompt -> . VAR ID IGUAL PROMPT LPAREN expresion COMA expresion RPAREN PUNTOYCOMA
    (30) imprimir -> . CONSOLE METODO LPAREN expresion RPAREN
    (31) metodo -> . ID METODO LPAREN RPAREN
    (32) metodo -> . ID METODO LPAREN expresion RPAREN
    (33) metodo -> . ID METODO LPAREN expresion COMA expresion RPAREN
    (34) metodo -> . ID METODO

    VAR             shift and go to state 12
    FOR             shift and go to state 16
    $end            reduce using rule 76 (empty -> .)
    RLLAVE          reduce using rule 76 (empty -> .)
    IF              shift and go to state 17
    WHILE           shift and go to state 18
    CONSOLE         shift and go to state 19
    ID              shift and go to state 13

    iteracion                      shift and go to state 4
    sentencias                     shift and go to state 22
    variable                       shift and go to state 2
    metodos                        shift and go to state 3
    objeto                         shift and go to state 5
    newset                         shift and go to state 6
    array                          shift and go to state 7
    empty                          shift and go to state 8
    if                             shift and go to state 9
    while                          shift and go to state 10
    prompt                         shift and go to state 11
    imprimir                       shift and go to state 14
    metodo                         shift and go to state 15

state 5

    (4) sentencias -> objeto . PUNTOYCOMA sentencias

    PUNTOYCOMA      shift and go to state 23


state 6

    (5) sentencias -> newset . sentencias
    (1) sentencias -> . variable sentencias
    (2) sentencias -> . metodos sentencias
    (3) sentencias -> . iteracion sentencias
    (4) sentencias -> . objeto PUNTOYCOMA sentencias
    (5) sentencias -> . newset sentencias
    (6) sentencias -> . array sentencias
    (7) sentencias -> . empty
    (8) sentencias -> . if sentencias
    (9) sentencias -> . while sentencias
    (10) sentencias -> . prompt sentencias
    (13) variable -> . VAR ID PUNTOYCOMA
    (14) variable -> . VAR ID IGUAL expresion PUNTOYCOMA
    (15) variable -> . VAR ID IGUAL condi_anidado PUNTOYCOMA
    (11) metodos -> . imprimir PUNTOYCOMA
    (12) metodos -> . metodo PUNTOYCOMA
    (16) iteracion -> . FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE
    (17) iteracion -> . FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE
    (18) iteracion -> . FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE
    (19) iteracion -> . FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE
    (35) objeto -> . VAR ID IGUAL LLLAVE RLLAVE
    (36) objeto -> . VAR ID IGUAL LLLAVE keyvalue RLLAVE
    (45) newset -> . VAR ID IGUAL NEW SET LPAREN RPAREN PUNTOYCOMA
    (46) newset -> . VAR ID IGUAL NEW SET LPAREN contenido RPAREN PUNTOYCOMA
    (47) array -> . VAR ID IGUAL contenido PUNTOYCOMA
    (48) array -> . VAR ID IGUAL NEW ARRAY LPAREN elemento RPAREN PUNTOYCOMA
    (76) empty -> .
    (20) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE
    (21) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE else
    (22) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif
    (23) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif else
    (27) while -> . WHILE LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE
    (28) prompt -> . VAR ID IGUAL PROMPT LPAREN expresion RPAREN PUNTOYCOMA
    (29) prompt -> . VAR ID IGUAL PROMPT LPAREN expresion COMA expresion RPAREN PUNTOYCOMA
    (30) imprimir -> . CONSOLE METODO LPAREN expresion RPAREN
    (31) metodo -> . ID METODO LPAREN RPAREN
    (32) metodo -> . ID METODO LPAREN expresion RPAREN
    (33) metodo -> . ID METODO LPAREN expresion COMA expresion RPAREN
    (34) metodo -> . ID METODO

    VAR             shift and go to state 12
    FOR             shift and go to state 16
    $end            reduce using rule 76 (empty -> .)
    RLLAVE          reduce using rule 76 (empty -> .)
    IF              shift and go to state 17
    WHILE           shift and go to state 18
    CONSOLE         shift and go to state 19
    ID              shift and go to state 13

    newset                         shift and go to state 6
    sentencias                     shift and go to state 24
    variable                       shift and go to state 2
    metodos                        shift and go to state 3
    iteracion                      shift and go to state 4
    objeto                         shift and go to state 5
    array                          shift and go to state 7
    empty                          shift and go to state 8
    if                             shift and go to state 9
    while                          shift and go to state 10
    prompt                         shift and go to state 11
    imprimir                       shift and go to state 14
    metodo                         shift and go to state 15

state 7

    (6) sentencias -> array . sentencias
    (1) sentencias -> . variable sentencias
    (2) sentencias -> . metodos sentencias
    (3) sentencias -> . iteracion sentencias
    (4) sentencias -> . objeto PUNTOYCOMA sentencias
    (5) sentencias -> . newset sentencias
    (6) sentencias -> . array sentencias
    (7) sentencias -> . empty
    (8) sentencias -> . if sentencias
    (9) sentencias -> . while sentencias
    (10) sentencias -> . prompt sentencias
    (13) variable -> . VAR ID PUNTOYCOMA
    (14) variable -> . VAR ID IGUAL expresion PUNTOYCOMA
    (15) variable -> . VAR ID IGUAL condi_anidado PUNTOYCOMA
    (11) metodos -> . imprimir PUNTOYCOMA
    (12) metodos -> . metodo PUNTOYCOMA
    (16) iteracion -> . FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE
    (17) iteracion -> . FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE
    (18) iteracion -> . FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE
    (19) iteracion -> . FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE
    (35) objeto -> . VAR ID IGUAL LLLAVE RLLAVE
    (36) objeto -> . VAR ID IGUAL LLLAVE keyvalue RLLAVE
    (45) newset -> . VAR ID IGUAL NEW SET LPAREN RPAREN PUNTOYCOMA
    (46) newset -> . VAR ID IGUAL NEW SET LPAREN contenido RPAREN PUNTOYCOMA
    (47) array -> . VAR ID IGUAL contenido PUNTOYCOMA
    (48) array -> . VAR ID IGUAL NEW ARRAY LPAREN elemento RPAREN PUNTOYCOMA
    (76) empty -> .
    (20) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE
    (21) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE else
    (22) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif
    (23) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif else
    (27) while -> . WHILE LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE
    (28) prompt -> . VAR ID IGUAL PROMPT LPAREN expresion RPAREN PUNTOYCOMA
    (29) prompt -> . VAR ID IGUAL PROMPT LPAREN expresion COMA expresion RPAREN PUNTOYCOMA
    (30) imprimir -> . CONSOLE METODO LPAREN expresion RPAREN
    (31) metodo -> . ID METODO LPAREN RPAREN
    (32) metodo -> . ID METODO LPAREN expresion RPAREN
    (33) metodo -> . ID METODO LPAREN expresion COMA expresion RPAREN
    (34) metodo -> . ID METODO

    VAR             shift and go to state 12
    FOR             shift and go to state 16
    $end            reduce using rule 76 (empty -> .)
    RLLAVE          reduce using rule 76 (empty -> .)
    IF              shift and go to state 17
    WHILE           shift and go to state 18
    CONSOLE         shift and go to state 19
    ID              shift and go to state 13

    array                          shift and go to state 7
    sentencias                     shift and go to state 25
    variable                       shift and go to state 2
    metodos                        shift and go to state 3
    iteracion                      shift and go to state 4
    objeto                         shift and go to state 5
    newset                         shift and go to state 6
    empty                          shift and go to state 8
    if                             shift and go to state 9
    while                          shift and go to state 10
    prompt                         shift and go to state 11
    imprimir                       shift and go to state 14
    metodo                         shift and go to state 15

state 8

    (7) sentencias -> empty .

    $end            reduce using rule 7 (sentencias -> empty .)
    RLLAVE          reduce using rule 7 (sentencias -> empty .)


state 9

    (8) sentencias -> if . sentencias
    (1) sentencias -> . variable sentencias
    (2) sentencias -> . metodos sentencias
    (3) sentencias -> . iteracion sentencias
    (4) sentencias -> . objeto PUNTOYCOMA sentencias
    (5) sentencias -> . newset sentencias
    (6) sentencias -> . array sentencias
    (7) sentencias -> . empty
    (8) sentencias -> . if sentencias
    (9) sentencias -> . while sentencias
    (10) sentencias -> . prompt sentencias
    (13) variable -> . VAR ID PUNTOYCOMA
    (14) variable -> . VAR ID IGUAL expresion PUNTOYCOMA
    (15) variable -> . VAR ID IGUAL condi_anidado PUNTOYCOMA
    (11) metodos -> . imprimir PUNTOYCOMA
    (12) metodos -> . metodo PUNTOYCOMA
    (16) iteracion -> . FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE
    (17) iteracion -> . FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE
    (18) iteracion -> . FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE
    (19) iteracion -> . FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE
    (35) objeto -> . VAR ID IGUAL LLLAVE RLLAVE
    (36) objeto -> . VAR ID IGUAL LLLAVE keyvalue RLLAVE
    (45) newset -> . VAR ID IGUAL NEW SET LPAREN RPAREN PUNTOYCOMA
    (46) newset -> . VAR ID IGUAL NEW SET LPAREN contenido RPAREN PUNTOYCOMA
    (47) array -> . VAR ID IGUAL contenido PUNTOYCOMA
    (48) array -> . VAR ID IGUAL NEW ARRAY LPAREN elemento RPAREN PUNTOYCOMA
    (76) empty -> .
    (20) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE
    (21) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE else
    (22) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif
    (23) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif else
    (27) while -> . WHILE LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE
    (28) prompt -> . VAR ID IGUAL PROMPT LPAREN expresion RPAREN PUNTOYCOMA
    (29) prompt -> . VAR ID IGUAL PROMPT LPAREN expresion COMA expresion RPAREN PUNTOYCOMA
    (30) imprimir -> . CONSOLE METODO LPAREN expresion RPAREN
    (31) metodo -> . ID METODO LPAREN RPAREN
    (32) metodo -> . ID METODO LPAREN expresion RPAREN
    (33) metodo -> . ID METODO LPAREN expresion COMA expresion RPAREN
    (34) metodo -> . ID METODO

    VAR             shift and go to state 12
    FOR             shift and go to state 16
    $end            reduce using rule 76 (empty -> .)
    RLLAVE          reduce using rule 76 (empty -> .)
    IF              shift and go to state 17
    WHILE           shift and go to state 18
    CONSOLE         shift and go to state 19
    ID              shift and go to state 13

    if                             shift and go to state 9
    sentencias                     shift and go to state 26
    variable                       shift and go to state 2
    metodos                        shift and go to state 3
    iteracion                      shift and go to state 4
    objeto                         shift and go to state 5
    newset                         shift and go to state 6
    array                          shift and go to state 7
    empty                          shift and go to state 8
    while                          shift and go to state 10
    prompt                         shift and go to state 11
    imprimir                       shift and go to state 14
    metodo                         shift and go to state 15

state 10

    (9) sentencias -> while . sentencias
    (1) sentencias -> . variable sentencias
    (2) sentencias -> . metodos sentencias
    (3) sentencias -> . iteracion sentencias
    (4) sentencias -> . objeto PUNTOYCOMA sentencias
    (5) sentencias -> . newset sentencias
    (6) sentencias -> . array sentencias
    (7) sentencias -> . empty
    (8) sentencias -> . if sentencias
    (9) sentencias -> . while sentencias
    (10) sentencias -> . prompt sentencias
    (13) variable -> . VAR ID PUNTOYCOMA
    (14) variable -> . VAR ID IGUAL expresion PUNTOYCOMA
    (15) variable -> . VAR ID IGUAL condi_anidado PUNTOYCOMA
    (11) metodos -> . imprimir PUNTOYCOMA
    (12) metodos -> . metodo PUNTOYCOMA
    (16) iteracion -> . FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE
    (17) iteracion -> . FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE
    (18) iteracion -> . FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE
    (19) iteracion -> . FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE
    (35) objeto -> . VAR ID IGUAL LLLAVE RLLAVE
    (36) objeto -> . VAR ID IGUAL LLLAVE keyvalue RLLAVE
    (45) newset -> . VAR ID IGUAL NEW SET LPAREN RPAREN PUNTOYCOMA
    (46) newset -> . VAR ID IGUAL NEW SET LPAREN contenido RPAREN PUNTOYCOMA
    (47) array -> . VAR ID IGUAL contenido PUNTOYCOMA
    (48) array -> . VAR ID IGUAL NEW ARRAY LPAREN elemento RPAREN PUNTOYCOMA
    (76) empty -> .
    (20) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE
    (21) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE else
    (22) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif
    (23) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif else
    (27) while -> . WHILE LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE
    (28) prompt -> . VAR ID IGUAL PROMPT LPAREN expresion RPAREN PUNTOYCOMA
    (29) prompt -> . VAR ID IGUAL PROMPT LPAREN expresion COMA expresion RPAREN PUNTOYCOMA
    (30) imprimir -> . CONSOLE METODO LPAREN expresion RPAREN
    (31) metodo -> . ID METODO LPAREN RPAREN
    (32) metodo -> . ID METODO LPAREN expresion RPAREN
    (33) metodo -> . ID METODO LPAREN expresion COMA expresion RPAREN
    (34) metodo -> . ID METODO

    VAR             shift and go to state 12
    FOR             shift and go to state 16
    $end            reduce using rule 76 (empty -> .)
    RLLAVE          reduce using rule 76 (empty -> .)
    IF              shift and go to state 17
    WHILE           shift and go to state 18
    CONSOLE         shift and go to state 19
    ID              shift and go to state 13

    while                          shift and go to state 10
    sentencias                     shift and go to state 27
    variable                       shift and go to state 2
    metodos                        shift and go to state 3
    iteracion                      shift and go to state 4
    objeto                         shift and go to state 5
    newset                         shift and go to state 6
    array                          shift and go to state 7
    empty                          shift and go to state 8
    if                             shift and go to state 9
    prompt                         shift and go to state 11
    imprimir                       shift and go to state 14
    metodo                         shift and go to state 15

state 11

    (10) sentencias -> prompt . sentencias
    (1) sentencias -> . variable sentencias
    (2) sentencias -> . metodos sentencias
    (3) sentencias -> . iteracion sentencias
    (4) sentencias -> . objeto PUNTOYCOMA sentencias
    (5) sentencias -> . newset sentencias
    (6) sentencias -> . array sentencias
    (7) sentencias -> . empty
    (8) sentencias -> . if sentencias
    (9) sentencias -> . while sentencias
    (10) sentencias -> . prompt sentencias
    (13) variable -> . VAR ID PUNTOYCOMA
    (14) variable -> . VAR ID IGUAL expresion PUNTOYCOMA
    (15) variable -> . VAR ID IGUAL condi_anidado PUNTOYCOMA
    (11) metodos -> . imprimir PUNTOYCOMA
    (12) metodos -> . metodo PUNTOYCOMA
    (16) iteracion -> . FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE
    (17) iteracion -> . FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE
    (18) iteracion -> . FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE
    (19) iteracion -> . FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE
    (35) objeto -> . VAR ID IGUAL LLLAVE RLLAVE
    (36) objeto -> . VAR ID IGUAL LLLAVE keyvalue RLLAVE
    (45) newset -> . VAR ID IGUAL NEW SET LPAREN RPAREN PUNTOYCOMA
    (46) newset -> . VAR ID IGUAL NEW SET LPAREN contenido RPAREN PUNTOYCOMA
    (47) array -> . VAR ID IGUAL contenido PUNTOYCOMA
    (48) array -> . VAR ID IGUAL NEW ARRAY LPAREN elemento RPAREN PUNTOYCOMA
    (76) empty -> .
    (20) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE
    (21) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE else
    (22) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif
    (23) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif else
    (27) while -> . WHILE LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE
    (28) prompt -> . VAR ID IGUAL PROMPT LPAREN expresion RPAREN PUNTOYCOMA
    (29) prompt -> . VAR ID IGUAL PROMPT LPAREN expresion COMA expresion RPAREN PUNTOYCOMA
    (30) imprimir -> . CONSOLE METODO LPAREN expresion RPAREN
    (31) metodo -> . ID METODO LPAREN RPAREN
    (32) metodo -> . ID METODO LPAREN expresion RPAREN
    (33) metodo -> . ID METODO LPAREN expresion COMA expresion RPAREN
    (34) metodo -> . ID METODO

    VAR             shift and go to state 12
    FOR             shift and go to state 16
    $end            reduce using rule 76 (empty -> .)
    RLLAVE          reduce using rule 76 (empty -> .)
    IF              shift and go to state 17
    WHILE           shift and go to state 18
    CONSOLE         shift and go to state 19
    ID              shift and go to state 13

    prompt                         shift and go to state 11
    sentencias                     shift and go to state 28
    variable                       shift and go to state 2
    metodos                        shift and go to state 3
    iteracion                      shift and go to state 4
    objeto                         shift and go to state 5
    newset                         shift and go to state 6
    array                          shift and go to state 7
    empty                          shift and go to state 8
    if                             shift and go to state 9
    while                          shift and go to state 10
    imprimir                       shift and go to state 14
    metodo                         shift and go to state 15

state 12

    (13) variable -> VAR . ID PUNTOYCOMA
    (14) variable -> VAR . ID IGUAL expresion PUNTOYCOMA
    (15) variable -> VAR . ID IGUAL condi_anidado PUNTOYCOMA
    (35) objeto -> VAR . ID IGUAL LLLAVE RLLAVE
    (36) objeto -> VAR . ID IGUAL LLLAVE keyvalue RLLAVE
    (45) newset -> VAR . ID IGUAL NEW SET LPAREN RPAREN PUNTOYCOMA
    (46) newset -> VAR . ID IGUAL NEW SET LPAREN contenido RPAREN PUNTOYCOMA
    (47) array -> VAR . ID IGUAL contenido PUNTOYCOMA
    (48) array -> VAR . ID IGUAL NEW ARRAY LPAREN elemento RPAREN PUNTOYCOMA
    (28) prompt -> VAR . ID IGUAL PROMPT LPAREN expresion RPAREN PUNTOYCOMA
    (29) prompt -> VAR . ID IGUAL PROMPT LPAREN expresion COMA expresion RPAREN PUNTOYCOMA

    ID              shift and go to state 29


state 13

    (31) metodo -> ID . METODO LPAREN RPAREN
    (32) metodo -> ID . METODO LPAREN expresion RPAREN
    (33) metodo -> ID . METODO LPAREN expresion COMA expresion RPAREN
    (34) metodo -> ID . METODO

    METODO          shift and go to state 30


state 14

    (11) metodos -> imprimir . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 31


state 15

    (12) metodos -> metodo . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 32


state 16

    (16) iteracion -> FOR . LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE
    (17) iteracion -> FOR . LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE
    (18) iteracion -> FOR . LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE
    (19) iteracion -> FOR . LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE

    LPAREN          shift and go to state 33


state 17

    (20) if -> IF . LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE
    (21) if -> IF . LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE else
    (22) if -> IF . LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif
    (23) if -> IF . LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif else

    LPAREN          shift and go to state 34


state 18

    (27) while -> WHILE . LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE

    LPAREN          shift and go to state 35


state 19

    (30) imprimir -> CONSOLE . METODO LPAREN expresion RPAREN

    METODO          shift and go to state 36


state 20

    (1) sentencias -> variable sentencias .

    $end            reduce using rule 1 (sentencias -> variable sentencias .)
    RLLAVE          reduce using rule 1 (sentencias -> variable sentencias .)


state 21

    (2) sentencias -> metodos sentencias .

    $end            reduce using rule 2 (sentencias -> metodos sentencias .)
    RLLAVE          reduce using rule 2 (sentencias -> metodos sentencias .)


state 22

    (3) sentencias -> iteracion sentencias .

    $end            reduce using rule 3 (sentencias -> iteracion sentencias .)
    RLLAVE          reduce using rule 3 (sentencias -> iteracion sentencias .)


state 23

    (4) sentencias -> objeto PUNTOYCOMA . sentencias
    (1) sentencias -> . variable sentencias
    (2) sentencias -> . metodos sentencias
    (3) sentencias -> . iteracion sentencias
    (4) sentencias -> . objeto PUNTOYCOMA sentencias
    (5) sentencias -> . newset sentencias
    (6) sentencias -> . array sentencias
    (7) sentencias -> . empty
    (8) sentencias -> . if sentencias
    (9) sentencias -> . while sentencias
    (10) sentencias -> . prompt sentencias
    (13) variable -> . VAR ID PUNTOYCOMA
    (14) variable -> . VAR ID IGUAL expresion PUNTOYCOMA
    (15) variable -> . VAR ID IGUAL condi_anidado PUNTOYCOMA
    (11) metodos -> . imprimir PUNTOYCOMA
    (12) metodos -> . metodo PUNTOYCOMA
    (16) iteracion -> . FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE
    (17) iteracion -> . FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE
    (18) iteracion -> . FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE
    (19) iteracion -> . FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE
    (35) objeto -> . VAR ID IGUAL LLLAVE RLLAVE
    (36) objeto -> . VAR ID IGUAL LLLAVE keyvalue RLLAVE
    (45) newset -> . VAR ID IGUAL NEW SET LPAREN RPAREN PUNTOYCOMA
    (46) newset -> . VAR ID IGUAL NEW SET LPAREN contenido RPAREN PUNTOYCOMA
    (47) array -> . VAR ID IGUAL contenido PUNTOYCOMA
    (48) array -> . VAR ID IGUAL NEW ARRAY LPAREN elemento RPAREN PUNTOYCOMA
    (76) empty -> .
    (20) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE
    (21) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE else
    (22) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif
    (23) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif else
    (27) while -> . WHILE LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE
    (28) prompt -> . VAR ID IGUAL PROMPT LPAREN expresion RPAREN PUNTOYCOMA
    (29) prompt -> . VAR ID IGUAL PROMPT LPAREN expresion COMA expresion RPAREN PUNTOYCOMA
    (30) imprimir -> . CONSOLE METODO LPAREN expresion RPAREN
    (31) metodo -> . ID METODO LPAREN RPAREN
    (32) metodo -> . ID METODO LPAREN expresion RPAREN
    (33) metodo -> . ID METODO LPAREN expresion COMA expresion RPAREN
    (34) metodo -> . ID METODO

    VAR             shift and go to state 12
    FOR             shift and go to state 16
    $end            reduce using rule 76 (empty -> .)
    RLLAVE          reduce using rule 76 (empty -> .)
    IF              shift and go to state 17
    WHILE           shift and go to state 18
    CONSOLE         shift and go to state 19
    ID              shift and go to state 13

    objeto                         shift and go to state 5
    sentencias                     shift and go to state 37
    variable                       shift and go to state 2
    metodos                        shift and go to state 3
    iteracion                      shift and go to state 4
    newset                         shift and go to state 6
    array                          shift and go to state 7
    empty                          shift and go to state 8
    if                             shift and go to state 9
    while                          shift and go to state 10
    prompt                         shift and go to state 11
    imprimir                       shift and go to state 14
    metodo                         shift and go to state 15

state 24

    (5) sentencias -> newset sentencias .

    $end            reduce using rule 5 (sentencias -> newset sentencias .)
    RLLAVE          reduce using rule 5 (sentencias -> newset sentencias .)


state 25

    (6) sentencias -> array sentencias .

    $end            reduce using rule 6 (sentencias -> array sentencias .)
    RLLAVE          reduce using rule 6 (sentencias -> array sentencias .)


state 26

    (8) sentencias -> if sentencias .

    $end            reduce using rule 8 (sentencias -> if sentencias .)
    RLLAVE          reduce using rule 8 (sentencias -> if sentencias .)


state 27

    (9) sentencias -> while sentencias .

    $end            reduce using rule 9 (sentencias -> while sentencias .)
    RLLAVE          reduce using rule 9 (sentencias -> while sentencias .)


state 28

    (10) sentencias -> prompt sentencias .

    $end            reduce using rule 10 (sentencias -> prompt sentencias .)
    RLLAVE          reduce using rule 10 (sentencias -> prompt sentencias .)


state 29

    (13) variable -> VAR ID . PUNTOYCOMA
    (14) variable -> VAR ID . IGUAL expresion PUNTOYCOMA
    (15) variable -> VAR ID . IGUAL condi_anidado PUNTOYCOMA
    (35) objeto -> VAR ID . IGUAL LLLAVE RLLAVE
    (36) objeto -> VAR ID . IGUAL LLLAVE keyvalue RLLAVE
    (45) newset -> VAR ID . IGUAL NEW SET LPAREN RPAREN PUNTOYCOMA
    (46) newset -> VAR ID . IGUAL NEW SET LPAREN contenido RPAREN PUNTOYCOMA
    (47) array -> VAR ID . IGUAL contenido PUNTOYCOMA
    (48) array -> VAR ID . IGUAL NEW ARRAY LPAREN elemento RPAREN PUNTOYCOMA
    (28) prompt -> VAR ID . IGUAL PROMPT LPAREN expresion RPAREN PUNTOYCOMA
    (29) prompt -> VAR ID . IGUAL PROMPT LPAREN expresion COMA expresion RPAREN PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 38
    IGUAL           shift and go to state 39


state 30

    (31) metodo -> ID METODO . LPAREN RPAREN
    (32) metodo -> ID METODO . LPAREN expresion RPAREN
    (33) metodo -> ID METODO . LPAREN expresion COMA expresion RPAREN
    (34) metodo -> ID METODO .

    LPAREN          shift and go to state 40
    PUNTOYCOMA      reduce using rule 34 (metodo -> ID METODO .)


state 31

    (11) metodos -> imprimir PUNTOYCOMA .

    VAR             reduce using rule 11 (metodos -> imprimir PUNTOYCOMA .)
    FOR             reduce using rule 11 (metodos -> imprimir PUNTOYCOMA .)
    IF              reduce using rule 11 (metodos -> imprimir PUNTOYCOMA .)
    WHILE           reduce using rule 11 (metodos -> imprimir PUNTOYCOMA .)
    CONSOLE         reduce using rule 11 (metodos -> imprimir PUNTOYCOMA .)
    ID              reduce using rule 11 (metodos -> imprimir PUNTOYCOMA .)
    $end            reduce using rule 11 (metodos -> imprimir PUNTOYCOMA .)
    RLLAVE          reduce using rule 11 (metodos -> imprimir PUNTOYCOMA .)


state 32

    (12) metodos -> metodo PUNTOYCOMA .

    VAR             reduce using rule 12 (metodos -> metodo PUNTOYCOMA .)
    FOR             reduce using rule 12 (metodos -> metodo PUNTOYCOMA .)
    IF              reduce using rule 12 (metodos -> metodo PUNTOYCOMA .)
    WHILE           reduce using rule 12 (metodos -> metodo PUNTOYCOMA .)
    CONSOLE         reduce using rule 12 (metodos -> metodo PUNTOYCOMA .)
    ID              reduce using rule 12 (metodos -> metodo PUNTOYCOMA .)
    $end            reduce using rule 12 (metodos -> metodo PUNTOYCOMA .)
    RLLAVE          reduce using rule 12 (metodos -> metodo PUNTOYCOMA .)


state 33

    (16) iteracion -> FOR LPAREN . ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE
    (17) iteracion -> FOR LPAREN . VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE
    (18) iteracion -> FOR LPAREN . ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE
    (19) iteracion -> FOR LPAREN . VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE

    ID              shift and go to state 41
    VAR             shift and go to state 42


state 34

    (20) if -> IF LPAREN . condi_anidado RPAREN LLLAVE sentencias RLLAVE
    (21) if -> IF LPAREN . condi_anidado RPAREN LLLAVE sentencias RLLAVE else
    (22) if -> IF LPAREN . condi_anidado RPAREN LLLAVE sentencias RLLAVE elif
    (23) if -> IF LPAREN . condi_anidado RPAREN LLLAVE sentencias RLLAVE elif else
    (60) condi_anidado -> . condicion AND condi_anidado
    (61) condi_anidado -> . NOT condicion AND condi_anidado
    (62) condi_anidado -> . condicion OR condi_anidado
    (63) condi_anidado -> . NOT condicion OR condi_anidado
    (64) condi_anidado -> . condicion
    (65) condi_anidado -> . NOT condicion
    (66) condicion -> . factor COMPARADOR factor
    (67) condicion -> . factor IGUALA factor
    (68) condicion -> . factor DIFERENTE factor
    (69) condicion -> . TRUE
    (70) condicion -> . FALSE
    (72) factor -> . LPAREN expresion RPAREN
    (73) factor -> . NUMBER
    (74) factor -> . TEXTO
    (75) factor -> . ID

    NOT             shift and go to state 46
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    LPAREN          shift and go to state 43
    NUMBER          shift and go to state 50
    TEXTO           shift and go to state 51
    ID              shift and go to state 52

    condi_anidado                  shift and go to state 44
    condicion                      shift and go to state 45
    factor                         shift and go to state 47

state 35

    (27) while -> WHILE LPAREN . condi_anidado RPAREN LLLAVE sentencias RLLAVE
    (60) condi_anidado -> . condicion AND condi_anidado
    (61) condi_anidado -> . NOT condicion AND condi_anidado
    (62) condi_anidado -> . condicion OR condi_anidado
    (63) condi_anidado -> . NOT condicion OR condi_anidado
    (64) condi_anidado -> . condicion
    (65) condi_anidado -> . NOT condicion
    (66) condicion -> . factor COMPARADOR factor
    (67) condicion -> . factor IGUALA factor
    (68) condicion -> . factor DIFERENTE factor
    (69) condicion -> . TRUE
    (70) condicion -> . FALSE
    (72) factor -> . LPAREN expresion RPAREN
    (73) factor -> . NUMBER
    (74) factor -> . TEXTO
    (75) factor -> . ID

    NOT             shift and go to state 46
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    LPAREN          shift and go to state 43
    NUMBER          shift and go to state 50
    TEXTO           shift and go to state 51
    ID              shift and go to state 52

    condi_anidado                  shift and go to state 53
    condicion                      shift and go to state 45
    factor                         shift and go to state 47

state 36

    (30) imprimir -> CONSOLE METODO . LPAREN expresion RPAREN

    LPAREN          shift and go to state 54


state 37

    (4) sentencias -> objeto PUNTOYCOMA sentencias .

    $end            reduce using rule 4 (sentencias -> objeto PUNTOYCOMA sentencias .)
    RLLAVE          reduce using rule 4 (sentencias -> objeto PUNTOYCOMA sentencias .)


state 38

    (13) variable -> VAR ID PUNTOYCOMA .

    VAR             reduce using rule 13 (variable -> VAR ID PUNTOYCOMA .)
    FOR             reduce using rule 13 (variable -> VAR ID PUNTOYCOMA .)
    IF              reduce using rule 13 (variable -> VAR ID PUNTOYCOMA .)
    WHILE           reduce using rule 13 (variable -> VAR ID PUNTOYCOMA .)
    CONSOLE         reduce using rule 13 (variable -> VAR ID PUNTOYCOMA .)
    ID              reduce using rule 13 (variable -> VAR ID PUNTOYCOMA .)
    $end            reduce using rule 13 (variable -> VAR ID PUNTOYCOMA .)
    RLLAVE          reduce using rule 13 (variable -> VAR ID PUNTOYCOMA .)


state 39

    (14) variable -> VAR ID IGUAL . expresion PUNTOYCOMA
    (15) variable -> VAR ID IGUAL . condi_anidado PUNTOYCOMA
    (35) objeto -> VAR ID IGUAL . LLLAVE RLLAVE
    (36) objeto -> VAR ID IGUAL . LLLAVE keyvalue RLLAVE
    (45) newset -> VAR ID IGUAL . NEW SET LPAREN RPAREN PUNTOYCOMA
    (46) newset -> VAR ID IGUAL . NEW SET LPAREN contenido RPAREN PUNTOYCOMA
    (47) array -> VAR ID IGUAL . contenido PUNTOYCOMA
    (48) array -> VAR ID IGUAL . NEW ARRAY LPAREN elemento RPAREN PUNTOYCOMA
    (28) prompt -> VAR ID IGUAL . PROMPT LPAREN expresion RPAREN PUNTOYCOMA
    (29) prompt -> VAR ID IGUAL . PROMPT LPAREN expresion COMA expresion RPAREN PUNTOYCOMA
    (54) expresion -> . expresion PLUS factor
    (55) expresion -> . expresion MINUS term
    (56) expresion -> . expresion TIMES term
    (57) expresion -> . expresion DIVIDE term
    (58) expresion -> . expresion POTENCIA term
    (59) expresion -> . term
    (60) condi_anidado -> . condicion AND condi_anidado
    (61) condi_anidado -> . NOT condicion AND condi_anidado
    (62) condi_anidado -> . condicion OR condi_anidado
    (63) condi_anidado -> . NOT condicion OR condi_anidado
    (64) condi_anidado -> . condicion
    (65) condi_anidado -> . NOT condicion
    (49) contenido -> . LCORCH elemento RCORCH
    (50) contenido -> . LCORCH RCORCH
    (51) contenido -> . LCORCH expresion RCORCH
    (71) term -> . factor
    (66) condicion -> . factor COMPARADOR factor
    (67) condicion -> . factor IGUALA factor
    (68) condicion -> . factor DIFERENTE factor
    (69) condicion -> . TRUE
    (70) condicion -> . FALSE
    (72) factor -> . LPAREN expresion RPAREN
    (73) factor -> . NUMBER
    (74) factor -> . TEXTO
    (75) factor -> . ID

    LLLAVE          shift and go to state 57
    NEW             shift and go to state 58
    PROMPT          shift and go to state 60
    NOT             shift and go to state 46
    LCORCH          shift and go to state 63
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    LPAREN          shift and go to state 43
    NUMBER          shift and go to state 50
    TEXTO           shift and go to state 51
    ID              shift and go to state 52

    expresion                      shift and go to state 55
    condi_anidado                  shift and go to state 56
    contenido                      shift and go to state 59
    factor                         shift and go to state 61
    term                           shift and go to state 62
    condicion                      shift and go to state 45

state 40

    (31) metodo -> ID METODO LPAREN . RPAREN
    (32) metodo -> ID METODO LPAREN . expresion RPAREN
    (33) metodo -> ID METODO LPAREN . expresion COMA expresion RPAREN
    (54) expresion -> . expresion PLUS factor
    (55) expresion -> . expresion MINUS term
    (56) expresion -> . expresion TIMES term
    (57) expresion -> . expresion DIVIDE term
    (58) expresion -> . expresion POTENCIA term
    (59) expresion -> . term
    (71) term -> . factor
    (72) factor -> . LPAREN expresion RPAREN
    (73) factor -> . NUMBER
    (74) factor -> . TEXTO
    (75) factor -> . ID

    RPAREN          shift and go to state 64
    LPAREN          shift and go to state 43
    NUMBER          shift and go to state 50
    TEXTO           shift and go to state 51
    ID              shift and go to state 52

    expresion                      shift and go to state 65
    factor                         shift and go to state 66
    term                           shift and go to state 62

state 41

    (16) iteracion -> FOR LPAREN ID . IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE
    (18) iteracion -> FOR LPAREN ID . IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE

    IGUAL           shift and go to state 67


state 42

    (17) iteracion -> FOR LPAREN VAR . ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE
    (19) iteracion -> FOR LPAREN VAR . ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE

    ID              shift and go to state 68


state 43

    (72) factor -> LPAREN . expresion RPAREN
    (54) expresion -> . expresion PLUS factor
    (55) expresion -> . expresion MINUS term
    (56) expresion -> . expresion TIMES term
    (57) expresion -> . expresion DIVIDE term
    (58) expresion -> . expresion POTENCIA term
    (59) expresion -> . term
    (71) term -> . factor
    (72) factor -> . LPAREN expresion RPAREN
    (73) factor -> . NUMBER
    (74) factor -> . TEXTO
    (75) factor -> . ID

    LPAREN          shift and go to state 43
    NUMBER          shift and go to state 50
    TEXTO           shift and go to state 51
    ID              shift and go to state 52

    expresion                      shift and go to state 69
    factor                         shift and go to state 66
    term                           shift and go to state 62

state 44

    (20) if -> IF LPAREN condi_anidado . RPAREN LLLAVE sentencias RLLAVE
    (21) if -> IF LPAREN condi_anidado . RPAREN LLLAVE sentencias RLLAVE else
    (22) if -> IF LPAREN condi_anidado . RPAREN LLLAVE sentencias RLLAVE elif
    (23) if -> IF LPAREN condi_anidado . RPAREN LLLAVE sentencias RLLAVE elif else

    RPAREN          shift and go to state 70


state 45

    (60) condi_anidado -> condicion . AND condi_anidado
    (62) condi_anidado -> condicion . OR condi_anidado
    (64) condi_anidado -> condicion .

    AND             shift and go to state 71
    OR              shift and go to state 72
    RPAREN          reduce using rule 64 (condi_anidado -> condicion .)
    PUNTOYCOMA      reduce using rule 64 (condi_anidado -> condicion .)


state 46

    (61) condi_anidado -> NOT . condicion AND condi_anidado
    (63) condi_anidado -> NOT . condicion OR condi_anidado
    (65) condi_anidado -> NOT . condicion
    (66) condicion -> . factor COMPARADOR factor
    (67) condicion -> . factor IGUALA factor
    (68) condicion -> . factor DIFERENTE factor
    (69) condicion -> . TRUE
    (70) condicion -> . FALSE
    (72) factor -> . LPAREN expresion RPAREN
    (73) factor -> . NUMBER
    (74) factor -> . TEXTO
    (75) factor -> . ID

    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    LPAREN          shift and go to state 43
    NUMBER          shift and go to state 50
    TEXTO           shift and go to state 51
    ID              shift and go to state 52

    condicion                      shift and go to state 73
    factor                         shift and go to state 47

state 47

    (66) condicion -> factor . COMPARADOR factor
    (67) condicion -> factor . IGUALA factor
    (68) condicion -> factor . DIFERENTE factor

    COMPARADOR      shift and go to state 74
    IGUALA          shift and go to state 75
    DIFERENTE       shift and go to state 76


state 48

    (69) condicion -> TRUE .

    AND             reduce using rule 69 (condicion -> TRUE .)
    OR              reduce using rule 69 (condicion -> TRUE .)
    RPAREN          reduce using rule 69 (condicion -> TRUE .)
    PUNTOYCOMA      reduce using rule 69 (condicion -> TRUE .)


state 49

    (70) condicion -> FALSE .

    AND             reduce using rule 70 (condicion -> FALSE .)
    OR              reduce using rule 70 (condicion -> FALSE .)
    RPAREN          reduce using rule 70 (condicion -> FALSE .)
    PUNTOYCOMA      reduce using rule 70 (condicion -> FALSE .)


state 50

    (73) factor -> NUMBER .

    COMPARADOR      reduce using rule 73 (factor -> NUMBER .)
    IGUALA          reduce using rule 73 (factor -> NUMBER .)
    DIFERENTE       reduce using rule 73 (factor -> NUMBER .)
    PUNTOYCOMA      reduce using rule 73 (factor -> NUMBER .)
    PLUS            reduce using rule 73 (factor -> NUMBER .)
    MINUS           reduce using rule 73 (factor -> NUMBER .)
    TIMES           reduce using rule 73 (factor -> NUMBER .)
    DIVIDE          reduce using rule 73 (factor -> NUMBER .)
    POTENCIA        reduce using rule 73 (factor -> NUMBER .)
    RPAREN          reduce using rule 73 (factor -> NUMBER .)
    COMA            reduce using rule 73 (factor -> NUMBER .)
    RCORCH          reduce using rule 73 (factor -> NUMBER .)
    AND             reduce using rule 73 (factor -> NUMBER .)
    OR              reduce using rule 73 (factor -> NUMBER .)
    RLLAVE          reduce using rule 73 (factor -> NUMBER .)


state 51

    (74) factor -> TEXTO .

    COMPARADOR      reduce using rule 74 (factor -> TEXTO .)
    IGUALA          reduce using rule 74 (factor -> TEXTO .)
    DIFERENTE       reduce using rule 74 (factor -> TEXTO .)
    PUNTOYCOMA      reduce using rule 74 (factor -> TEXTO .)
    PLUS            reduce using rule 74 (factor -> TEXTO .)
    MINUS           reduce using rule 74 (factor -> TEXTO .)
    TIMES           reduce using rule 74 (factor -> TEXTO .)
    DIVIDE          reduce using rule 74 (factor -> TEXTO .)
    POTENCIA        reduce using rule 74 (factor -> TEXTO .)
    RPAREN          reduce using rule 74 (factor -> TEXTO .)
    COMA            reduce using rule 74 (factor -> TEXTO .)
    RCORCH          reduce using rule 74 (factor -> TEXTO .)
    AND             reduce using rule 74 (factor -> TEXTO .)
    OR              reduce using rule 74 (factor -> TEXTO .)
    RLLAVE          reduce using rule 74 (factor -> TEXTO .)


state 52

    (75) factor -> ID .

    COMPARADOR      reduce using rule 75 (factor -> ID .)
    IGUALA          reduce using rule 75 (factor -> ID .)
    DIFERENTE       reduce using rule 75 (factor -> ID .)
    PUNTOYCOMA      reduce using rule 75 (factor -> ID .)
    PLUS            reduce using rule 75 (factor -> ID .)
    MINUS           reduce using rule 75 (factor -> ID .)
    TIMES           reduce using rule 75 (factor -> ID .)
    DIVIDE          reduce using rule 75 (factor -> ID .)
    POTENCIA        reduce using rule 75 (factor -> ID .)
    RPAREN          reduce using rule 75 (factor -> ID .)
    COMA            reduce using rule 75 (factor -> ID .)
    RCORCH          reduce using rule 75 (factor -> ID .)
    AND             reduce using rule 75 (factor -> ID .)
    OR              reduce using rule 75 (factor -> ID .)
    RLLAVE          reduce using rule 75 (factor -> ID .)


state 53

    (27) while -> WHILE LPAREN condi_anidado . RPAREN LLLAVE sentencias RLLAVE

    RPAREN          shift and go to state 77


state 54

    (30) imprimir -> CONSOLE METODO LPAREN . expresion RPAREN
    (54) expresion -> . expresion PLUS factor
    (55) expresion -> . expresion MINUS term
    (56) expresion -> . expresion TIMES term
    (57) expresion -> . expresion DIVIDE term
    (58) expresion -> . expresion POTENCIA term
    (59) expresion -> . term
    (71) term -> . factor
    (72) factor -> . LPAREN expresion RPAREN
    (73) factor -> . NUMBER
    (74) factor -> . TEXTO
    (75) factor -> . ID

    LPAREN          shift and go to state 43
    NUMBER          shift and go to state 50
    TEXTO           shift and go to state 51
    ID              shift and go to state 52

    expresion                      shift and go to state 78
    factor                         shift and go to state 66
    term                           shift and go to state 62

state 55

    (14) variable -> VAR ID IGUAL expresion . PUNTOYCOMA
    (54) expresion -> expresion . PLUS factor
    (55) expresion -> expresion . MINUS term
    (56) expresion -> expresion . TIMES term
    (57) expresion -> expresion . DIVIDE term
    (58) expresion -> expresion . POTENCIA term

    PUNTOYCOMA      shift and go to state 79
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    TIMES           shift and go to state 82
    DIVIDE          shift and go to state 83
    POTENCIA        shift and go to state 84


state 56

    (15) variable -> VAR ID IGUAL condi_anidado . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 85


state 57

    (35) objeto -> VAR ID IGUAL LLLAVE . RLLAVE
    (36) objeto -> VAR ID IGUAL LLLAVE . keyvalue RLLAVE
    (37) keyvalue -> . ID DOSPUNTOS factor
    (38) keyvalue -> . ID DOSPUNTOS factor COMA keyvalue
    (39) keyvalue -> . ID DOSPUNTOS contenido
    (40) keyvalue -> . ID DOSPUNTOS contenido COMA keyvalue
    (41) keyvalue -> . ID DOSPUNTOS TRUE
    (42) keyvalue -> . ID DOSPUNTOS TRUE COMA keyvalue
    (43) keyvalue -> . ID DOSPUNTOS FALSE
    (44) keyvalue -> . ID DOSPUNTOS FALSE COMA keyvalue

    RLLAVE          shift and go to state 87
    ID              shift and go to state 86

    keyvalue                       shift and go to state 88

state 58

    (45) newset -> VAR ID IGUAL NEW . SET LPAREN RPAREN PUNTOYCOMA
    (46) newset -> VAR ID IGUAL NEW . SET LPAREN contenido RPAREN PUNTOYCOMA
    (48) array -> VAR ID IGUAL NEW . ARRAY LPAREN elemento RPAREN PUNTOYCOMA

    SET             shift and go to state 89
    ARRAY           shift and go to state 90


state 59

    (47) array -> VAR ID IGUAL contenido . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 91


state 60

    (28) prompt -> VAR ID IGUAL PROMPT . LPAREN expresion RPAREN PUNTOYCOMA
    (29) prompt -> VAR ID IGUAL PROMPT . LPAREN expresion COMA expresion RPAREN PUNTOYCOMA

    LPAREN          shift and go to state 92


state 61

    (71) term -> factor .
    (66) condicion -> factor . COMPARADOR factor
    (67) condicion -> factor . IGUALA factor
    (68) condicion -> factor . DIFERENTE factor

    PUNTOYCOMA      reduce using rule 71 (term -> factor .)
    PLUS            reduce using rule 71 (term -> factor .)
    MINUS           reduce using rule 71 (term -> factor .)
    TIMES           reduce using rule 71 (term -> factor .)
    DIVIDE          reduce using rule 71 (term -> factor .)
    POTENCIA        reduce using rule 71 (term -> factor .)
    COMPARADOR      shift and go to state 74
    IGUALA          shift and go to state 75
    DIFERENTE       shift and go to state 76


state 62

    (59) expresion -> term .

    PUNTOYCOMA      reduce using rule 59 (expresion -> term .)
    PLUS            reduce using rule 59 (expresion -> term .)
    MINUS           reduce using rule 59 (expresion -> term .)
    TIMES           reduce using rule 59 (expresion -> term .)
    DIVIDE          reduce using rule 59 (expresion -> term .)
    POTENCIA        reduce using rule 59 (expresion -> term .)
    RPAREN          reduce using rule 59 (expresion -> term .)
    COMA            reduce using rule 59 (expresion -> term .)
    RCORCH          reduce using rule 59 (expresion -> term .)


state 63

    (49) contenido -> LCORCH . elemento RCORCH
    (50) contenido -> LCORCH . RCORCH
    (51) contenido -> LCORCH . expresion RCORCH
    (52) elemento -> . expresion
    (53) elemento -> . expresion COMA elemento
    (54) expresion -> . expresion PLUS factor
    (55) expresion -> . expresion MINUS term
    (56) expresion -> . expresion TIMES term
    (57) expresion -> . expresion DIVIDE term
    (58) expresion -> . expresion POTENCIA term
    (59) expresion -> . term
    (71) term -> . factor
    (72) factor -> . LPAREN expresion RPAREN
    (73) factor -> . NUMBER
    (74) factor -> . TEXTO
    (75) factor -> . ID

    RCORCH          shift and go to state 94
    LPAREN          shift and go to state 43
    NUMBER          shift and go to state 50
    TEXTO           shift and go to state 51
    ID              shift and go to state 52

    elemento                       shift and go to state 93
    expresion                      shift and go to state 95
    factor                         shift and go to state 66
    term                           shift and go to state 62

state 64

    (31) metodo -> ID METODO LPAREN RPAREN .

    PUNTOYCOMA      reduce using rule 31 (metodo -> ID METODO LPAREN RPAREN .)


state 65

    (32) metodo -> ID METODO LPAREN expresion . RPAREN
    (33) metodo -> ID METODO LPAREN expresion . COMA expresion RPAREN
    (54) expresion -> expresion . PLUS factor
    (55) expresion -> expresion . MINUS term
    (56) expresion -> expresion . TIMES term
    (57) expresion -> expresion . DIVIDE term
    (58) expresion -> expresion . POTENCIA term

    RPAREN          shift and go to state 96
    COMA            shift and go to state 97
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    TIMES           shift and go to state 82
    DIVIDE          shift and go to state 83
    POTENCIA        shift and go to state 84


state 66

    (71) term -> factor .

    RPAREN          reduce using rule 71 (term -> factor .)
    COMA            reduce using rule 71 (term -> factor .)
    PLUS            reduce using rule 71 (term -> factor .)
    MINUS           reduce using rule 71 (term -> factor .)
    TIMES           reduce using rule 71 (term -> factor .)
    DIVIDE          reduce using rule 71 (term -> factor .)
    POTENCIA        reduce using rule 71 (term -> factor .)
    RCORCH          reduce using rule 71 (term -> factor .)
    PUNTOYCOMA      reduce using rule 71 (term -> factor .)


state 67

    (16) iteracion -> FOR LPAREN ID IGUAL . NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE
    (18) iteracion -> FOR LPAREN ID IGUAL . NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE

    NUMBER          shift and go to state 98


state 68

    (17) iteracion -> FOR LPAREN VAR ID . IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE
    (19) iteracion -> FOR LPAREN VAR ID . IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE

    IGUAL           shift and go to state 99


state 69

    (72) factor -> LPAREN expresion . RPAREN
    (54) expresion -> expresion . PLUS factor
    (55) expresion -> expresion . MINUS term
    (56) expresion -> expresion . TIMES term
    (57) expresion -> expresion . DIVIDE term
    (58) expresion -> expresion . POTENCIA term

    RPAREN          shift and go to state 100
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    TIMES           shift and go to state 82
    DIVIDE          shift and go to state 83
    POTENCIA        shift and go to state 84


state 70

    (20) if -> IF LPAREN condi_anidado RPAREN . LLLAVE sentencias RLLAVE
    (21) if -> IF LPAREN condi_anidado RPAREN . LLLAVE sentencias RLLAVE else
    (22) if -> IF LPAREN condi_anidado RPAREN . LLLAVE sentencias RLLAVE elif
    (23) if -> IF LPAREN condi_anidado RPAREN . LLLAVE sentencias RLLAVE elif else

    LLLAVE          shift and go to state 101


state 71

    (60) condi_anidado -> condicion AND . condi_anidado
    (60) condi_anidado -> . condicion AND condi_anidado
    (61) condi_anidado -> . NOT condicion AND condi_anidado
    (62) condi_anidado -> . condicion OR condi_anidado
    (63) condi_anidado -> . NOT condicion OR condi_anidado
    (64) condi_anidado -> . condicion
    (65) condi_anidado -> . NOT condicion
    (66) condicion -> . factor COMPARADOR factor
    (67) condicion -> . factor IGUALA factor
    (68) condicion -> . factor DIFERENTE factor
    (69) condicion -> . TRUE
    (70) condicion -> . FALSE
    (72) factor -> . LPAREN expresion RPAREN
    (73) factor -> . NUMBER
    (74) factor -> . TEXTO
    (75) factor -> . ID

    NOT             shift and go to state 46
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    LPAREN          shift and go to state 43
    NUMBER          shift and go to state 50
    TEXTO           shift and go to state 51
    ID              shift and go to state 52

    condicion                      shift and go to state 45
    condi_anidado                  shift and go to state 102
    factor                         shift and go to state 47

state 72

    (62) condi_anidado -> condicion OR . condi_anidado
    (60) condi_anidado -> . condicion AND condi_anidado
    (61) condi_anidado -> . NOT condicion AND condi_anidado
    (62) condi_anidado -> . condicion OR condi_anidado
    (63) condi_anidado -> . NOT condicion OR condi_anidado
    (64) condi_anidado -> . condicion
    (65) condi_anidado -> . NOT condicion
    (66) condicion -> . factor COMPARADOR factor
    (67) condicion -> . factor IGUALA factor
    (68) condicion -> . factor DIFERENTE factor
    (69) condicion -> . TRUE
    (70) condicion -> . FALSE
    (72) factor -> . LPAREN expresion RPAREN
    (73) factor -> . NUMBER
    (74) factor -> . TEXTO
    (75) factor -> . ID

    NOT             shift and go to state 46
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    LPAREN          shift and go to state 43
    NUMBER          shift and go to state 50
    TEXTO           shift and go to state 51
    ID              shift and go to state 52

    condicion                      shift and go to state 45
    condi_anidado                  shift and go to state 103
    factor                         shift and go to state 47

state 73

    (61) condi_anidado -> NOT condicion . AND condi_anidado
    (63) condi_anidado -> NOT condicion . OR condi_anidado
    (65) condi_anidado -> NOT condicion .

    AND             shift and go to state 104
    OR              shift and go to state 105
    RPAREN          reduce using rule 65 (condi_anidado -> NOT condicion .)
    PUNTOYCOMA      reduce using rule 65 (condi_anidado -> NOT condicion .)


state 74

    (66) condicion -> factor COMPARADOR . factor
    (72) factor -> . LPAREN expresion RPAREN
    (73) factor -> . NUMBER
    (74) factor -> . TEXTO
    (75) factor -> . ID

    LPAREN          shift and go to state 43
    NUMBER          shift and go to state 50
    TEXTO           shift and go to state 51
    ID              shift and go to state 52

    factor                         shift and go to state 106

state 75

    (67) condicion -> factor IGUALA . factor
    (72) factor -> . LPAREN expresion RPAREN
    (73) factor -> . NUMBER
    (74) factor -> . TEXTO
    (75) factor -> . ID

    LPAREN          shift and go to state 43
    NUMBER          shift and go to state 50
    TEXTO           shift and go to state 51
    ID              shift and go to state 52

    factor                         shift and go to state 107

state 76

    (68) condicion -> factor DIFERENTE . factor
    (72) factor -> . LPAREN expresion RPAREN
    (73) factor -> . NUMBER
    (74) factor -> . TEXTO
    (75) factor -> . ID

    LPAREN          shift and go to state 43
    NUMBER          shift and go to state 50
    TEXTO           shift and go to state 51
    ID              shift and go to state 52

    factor                         shift and go to state 108

state 77

    (27) while -> WHILE LPAREN condi_anidado RPAREN . LLLAVE sentencias RLLAVE

    LLLAVE          shift and go to state 109


state 78

    (30) imprimir -> CONSOLE METODO LPAREN expresion . RPAREN
    (54) expresion -> expresion . PLUS factor
    (55) expresion -> expresion . MINUS term
    (56) expresion -> expresion . TIMES term
    (57) expresion -> expresion . DIVIDE term
    (58) expresion -> expresion . POTENCIA term

    RPAREN          shift and go to state 110
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    TIMES           shift and go to state 82
    DIVIDE          shift and go to state 83
    POTENCIA        shift and go to state 84


state 79

    (14) variable -> VAR ID IGUAL expresion PUNTOYCOMA .

    VAR             reduce using rule 14 (variable -> VAR ID IGUAL expresion PUNTOYCOMA .)
    FOR             reduce using rule 14 (variable -> VAR ID IGUAL expresion PUNTOYCOMA .)
    IF              reduce using rule 14 (variable -> VAR ID IGUAL expresion PUNTOYCOMA .)
    WHILE           reduce using rule 14 (variable -> VAR ID IGUAL expresion PUNTOYCOMA .)
    CONSOLE         reduce using rule 14 (variable -> VAR ID IGUAL expresion PUNTOYCOMA .)
    ID              reduce using rule 14 (variable -> VAR ID IGUAL expresion PUNTOYCOMA .)
    $end            reduce using rule 14 (variable -> VAR ID IGUAL expresion PUNTOYCOMA .)
    RLLAVE          reduce using rule 14 (variable -> VAR ID IGUAL expresion PUNTOYCOMA .)


state 80

    (54) expresion -> expresion PLUS . factor
    (72) factor -> . LPAREN expresion RPAREN
    (73) factor -> . NUMBER
    (74) factor -> . TEXTO
    (75) factor -> . ID

    LPAREN          shift and go to state 43
    NUMBER          shift and go to state 50
    TEXTO           shift and go to state 51
    ID              shift and go to state 52

    factor                         shift and go to state 111

state 81

    (55) expresion -> expresion MINUS . term
    (71) term -> . factor
    (72) factor -> . LPAREN expresion RPAREN
    (73) factor -> . NUMBER
    (74) factor -> . TEXTO
    (75) factor -> . ID

    LPAREN          shift and go to state 43
    NUMBER          shift and go to state 50
    TEXTO           shift and go to state 51
    ID              shift and go to state 52

    term                           shift and go to state 112
    factor                         shift and go to state 66

state 82

    (56) expresion -> expresion TIMES . term
    (71) term -> . factor
    (72) factor -> . LPAREN expresion RPAREN
    (73) factor -> . NUMBER
    (74) factor -> . TEXTO
    (75) factor -> . ID

    LPAREN          shift and go to state 43
    NUMBER          shift and go to state 50
    TEXTO           shift and go to state 51
    ID              shift and go to state 52

    term                           shift and go to state 113
    factor                         shift and go to state 66

state 83

    (57) expresion -> expresion DIVIDE . term
    (71) term -> . factor
    (72) factor -> . LPAREN expresion RPAREN
    (73) factor -> . NUMBER
    (74) factor -> . TEXTO
    (75) factor -> . ID

    LPAREN          shift and go to state 43
    NUMBER          shift and go to state 50
    TEXTO           shift and go to state 51
    ID              shift and go to state 52

    term                           shift and go to state 114
    factor                         shift and go to state 66

state 84

    (58) expresion -> expresion POTENCIA . term
    (71) term -> . factor
    (72) factor -> . LPAREN expresion RPAREN
    (73) factor -> . NUMBER
    (74) factor -> . TEXTO
    (75) factor -> . ID

    LPAREN          shift and go to state 43
    NUMBER          shift and go to state 50
    TEXTO           shift and go to state 51
    ID              shift and go to state 52

    term                           shift and go to state 115
    factor                         shift and go to state 66

state 85

    (15) variable -> VAR ID IGUAL condi_anidado PUNTOYCOMA .

    VAR             reduce using rule 15 (variable -> VAR ID IGUAL condi_anidado PUNTOYCOMA .)
    FOR             reduce using rule 15 (variable -> VAR ID IGUAL condi_anidado PUNTOYCOMA .)
    IF              reduce using rule 15 (variable -> VAR ID IGUAL condi_anidado PUNTOYCOMA .)
    WHILE           reduce using rule 15 (variable -> VAR ID IGUAL condi_anidado PUNTOYCOMA .)
    CONSOLE         reduce using rule 15 (variable -> VAR ID IGUAL condi_anidado PUNTOYCOMA .)
    ID              reduce using rule 15 (variable -> VAR ID IGUAL condi_anidado PUNTOYCOMA .)
    $end            reduce using rule 15 (variable -> VAR ID IGUAL condi_anidado PUNTOYCOMA .)
    RLLAVE          reduce using rule 15 (variable -> VAR ID IGUAL condi_anidado PUNTOYCOMA .)


state 86

    (37) keyvalue -> ID . DOSPUNTOS factor
    (38) keyvalue -> ID . DOSPUNTOS factor COMA keyvalue
    (39) keyvalue -> ID . DOSPUNTOS contenido
    (40) keyvalue -> ID . DOSPUNTOS contenido COMA keyvalue
    (41) keyvalue -> ID . DOSPUNTOS TRUE
    (42) keyvalue -> ID . DOSPUNTOS TRUE COMA keyvalue
    (43) keyvalue -> ID . DOSPUNTOS FALSE
    (44) keyvalue -> ID . DOSPUNTOS FALSE COMA keyvalue

    DOSPUNTOS       shift and go to state 116


state 87

    (35) objeto -> VAR ID IGUAL LLLAVE RLLAVE .

    PUNTOYCOMA      reduce using rule 35 (objeto -> VAR ID IGUAL LLLAVE RLLAVE .)


state 88

    (36) objeto -> VAR ID IGUAL LLLAVE keyvalue . RLLAVE

    RLLAVE          shift and go to state 117


state 89

    (45) newset -> VAR ID IGUAL NEW SET . LPAREN RPAREN PUNTOYCOMA
    (46) newset -> VAR ID IGUAL NEW SET . LPAREN contenido RPAREN PUNTOYCOMA

    LPAREN          shift and go to state 118


state 90

    (48) array -> VAR ID IGUAL NEW ARRAY . LPAREN elemento RPAREN PUNTOYCOMA

    LPAREN          shift and go to state 119


state 91

    (47) array -> VAR ID IGUAL contenido PUNTOYCOMA .

    VAR             reduce using rule 47 (array -> VAR ID IGUAL contenido PUNTOYCOMA .)
    FOR             reduce using rule 47 (array -> VAR ID IGUAL contenido PUNTOYCOMA .)
    IF              reduce using rule 47 (array -> VAR ID IGUAL contenido PUNTOYCOMA .)
    WHILE           reduce using rule 47 (array -> VAR ID IGUAL contenido PUNTOYCOMA .)
    CONSOLE         reduce using rule 47 (array -> VAR ID IGUAL contenido PUNTOYCOMA .)
    ID              reduce using rule 47 (array -> VAR ID IGUAL contenido PUNTOYCOMA .)
    $end            reduce using rule 47 (array -> VAR ID IGUAL contenido PUNTOYCOMA .)
    RLLAVE          reduce using rule 47 (array -> VAR ID IGUAL contenido PUNTOYCOMA .)


state 92

    (28) prompt -> VAR ID IGUAL PROMPT LPAREN . expresion RPAREN PUNTOYCOMA
    (29) prompt -> VAR ID IGUAL PROMPT LPAREN . expresion COMA expresion RPAREN PUNTOYCOMA
    (54) expresion -> . expresion PLUS factor
    (55) expresion -> . expresion MINUS term
    (56) expresion -> . expresion TIMES term
    (57) expresion -> . expresion DIVIDE term
    (58) expresion -> . expresion POTENCIA term
    (59) expresion -> . term
    (71) term -> . factor
    (72) factor -> . LPAREN expresion RPAREN
    (73) factor -> . NUMBER
    (74) factor -> . TEXTO
    (75) factor -> . ID

    LPAREN          shift and go to state 43
    NUMBER          shift and go to state 50
    TEXTO           shift and go to state 51
    ID              shift and go to state 52

    expresion                      shift and go to state 120
    factor                         shift and go to state 66
    term                           shift and go to state 62

state 93

    (49) contenido -> LCORCH elemento . RCORCH

    RCORCH          shift and go to state 121


state 94

    (50) contenido -> LCORCH RCORCH .

    PUNTOYCOMA      reduce using rule 50 (contenido -> LCORCH RCORCH .)
    COMA            reduce using rule 50 (contenido -> LCORCH RCORCH .)
    RLLAVE          reduce using rule 50 (contenido -> LCORCH RCORCH .)
    RPAREN          reduce using rule 50 (contenido -> LCORCH RCORCH .)


state 95

    (51) contenido -> LCORCH expresion . RCORCH
    (52) elemento -> expresion .
    (53) elemento -> expresion . COMA elemento
    (54) expresion -> expresion . PLUS factor
    (55) expresion -> expresion . MINUS term
    (56) expresion -> expresion . TIMES term
    (57) expresion -> expresion . DIVIDE term
    (58) expresion -> expresion . POTENCIA term

  ! shift/reduce conflict for RCORCH resolved as shift
    RCORCH          shift and go to state 122
    COMA            shift and go to state 123
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    TIMES           shift and go to state 82
    DIVIDE          shift and go to state 83
    POTENCIA        shift and go to state 84

  ! RCORCH          [ reduce using rule 52 (elemento -> expresion .) ]


state 96

    (32) metodo -> ID METODO LPAREN expresion RPAREN .

    PUNTOYCOMA      reduce using rule 32 (metodo -> ID METODO LPAREN expresion RPAREN .)


state 97

    (33) metodo -> ID METODO LPAREN expresion COMA . expresion RPAREN
    (54) expresion -> . expresion PLUS factor
    (55) expresion -> . expresion MINUS term
    (56) expresion -> . expresion TIMES term
    (57) expresion -> . expresion DIVIDE term
    (58) expresion -> . expresion POTENCIA term
    (59) expresion -> . term
    (71) term -> . factor
    (72) factor -> . LPAREN expresion RPAREN
    (73) factor -> . NUMBER
    (74) factor -> . TEXTO
    (75) factor -> . ID

    LPAREN          shift and go to state 43
    NUMBER          shift and go to state 50
    TEXTO           shift and go to state 51
    ID              shift and go to state 52

    expresion                      shift and go to state 124
    factor                         shift and go to state 66
    term                           shift and go to state 62

state 98

    (16) iteracion -> FOR LPAREN ID IGUAL NUMBER . PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE
    (18) iteracion -> FOR LPAREN ID IGUAL NUMBER . PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE

    PUNTOYCOMA      shift and go to state 125


state 99

    (17) iteracion -> FOR LPAREN VAR ID IGUAL . NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE
    (19) iteracion -> FOR LPAREN VAR ID IGUAL . NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE

    NUMBER          shift and go to state 126


state 100

    (72) factor -> LPAREN expresion RPAREN .

    COMPARADOR      reduce using rule 72 (factor -> LPAREN expresion RPAREN .)
    IGUALA          reduce using rule 72 (factor -> LPAREN expresion RPAREN .)
    DIFERENTE       reduce using rule 72 (factor -> LPAREN expresion RPAREN .)
    PUNTOYCOMA      reduce using rule 72 (factor -> LPAREN expresion RPAREN .)
    PLUS            reduce using rule 72 (factor -> LPAREN expresion RPAREN .)
    MINUS           reduce using rule 72 (factor -> LPAREN expresion RPAREN .)
    TIMES           reduce using rule 72 (factor -> LPAREN expresion RPAREN .)
    DIVIDE          reduce using rule 72 (factor -> LPAREN expresion RPAREN .)
    POTENCIA        reduce using rule 72 (factor -> LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 72 (factor -> LPAREN expresion RPAREN .)
    COMA            reduce using rule 72 (factor -> LPAREN expresion RPAREN .)
    RCORCH          reduce using rule 72 (factor -> LPAREN expresion RPAREN .)
    AND             reduce using rule 72 (factor -> LPAREN expresion RPAREN .)
    OR              reduce using rule 72 (factor -> LPAREN expresion RPAREN .)
    RLLAVE          reduce using rule 72 (factor -> LPAREN expresion RPAREN .)


state 101

    (20) if -> IF LPAREN condi_anidado RPAREN LLLAVE . sentencias RLLAVE
    (21) if -> IF LPAREN condi_anidado RPAREN LLLAVE . sentencias RLLAVE else
    (22) if -> IF LPAREN condi_anidado RPAREN LLLAVE . sentencias RLLAVE elif
    (23) if -> IF LPAREN condi_anidado RPAREN LLLAVE . sentencias RLLAVE elif else
    (1) sentencias -> . variable sentencias
    (2) sentencias -> . metodos sentencias
    (3) sentencias -> . iteracion sentencias
    (4) sentencias -> . objeto PUNTOYCOMA sentencias
    (5) sentencias -> . newset sentencias
    (6) sentencias -> . array sentencias
    (7) sentencias -> . empty
    (8) sentencias -> . if sentencias
    (9) sentencias -> . while sentencias
    (10) sentencias -> . prompt sentencias
    (13) variable -> . VAR ID PUNTOYCOMA
    (14) variable -> . VAR ID IGUAL expresion PUNTOYCOMA
    (15) variable -> . VAR ID IGUAL condi_anidado PUNTOYCOMA
    (11) metodos -> . imprimir PUNTOYCOMA
    (12) metodos -> . metodo PUNTOYCOMA
    (16) iteracion -> . FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE
    (17) iteracion -> . FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE
    (18) iteracion -> . FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE
    (19) iteracion -> . FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE
    (35) objeto -> . VAR ID IGUAL LLLAVE RLLAVE
    (36) objeto -> . VAR ID IGUAL LLLAVE keyvalue RLLAVE
    (45) newset -> . VAR ID IGUAL NEW SET LPAREN RPAREN PUNTOYCOMA
    (46) newset -> . VAR ID IGUAL NEW SET LPAREN contenido RPAREN PUNTOYCOMA
    (47) array -> . VAR ID IGUAL contenido PUNTOYCOMA
    (48) array -> . VAR ID IGUAL NEW ARRAY LPAREN elemento RPAREN PUNTOYCOMA
    (76) empty -> .
    (20) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE
    (21) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE else
    (22) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif
    (23) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif else
    (27) while -> . WHILE LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE
    (28) prompt -> . VAR ID IGUAL PROMPT LPAREN expresion RPAREN PUNTOYCOMA
    (29) prompt -> . VAR ID IGUAL PROMPT LPAREN expresion COMA expresion RPAREN PUNTOYCOMA
    (30) imprimir -> . CONSOLE METODO LPAREN expresion RPAREN
    (31) metodo -> . ID METODO LPAREN RPAREN
    (32) metodo -> . ID METODO LPAREN expresion RPAREN
    (33) metodo -> . ID METODO LPAREN expresion COMA expresion RPAREN
    (34) metodo -> . ID METODO

    VAR             shift and go to state 12
    FOR             shift and go to state 16
    RLLAVE          reduce using rule 76 (empty -> .)
    IF              shift and go to state 17
    WHILE           shift and go to state 18
    CONSOLE         shift and go to state 19
    ID              shift and go to state 13

    sentencias                     shift and go to state 127
    variable                       shift and go to state 2
    metodos                        shift and go to state 3
    iteracion                      shift and go to state 4
    objeto                         shift and go to state 5
    newset                         shift and go to state 6
    array                          shift and go to state 7
    empty                          shift and go to state 8
    if                             shift and go to state 9
    while                          shift and go to state 10
    prompt                         shift and go to state 11
    imprimir                       shift and go to state 14
    metodo                         shift and go to state 15

state 102

    (60) condi_anidado -> condicion AND condi_anidado .

    RPAREN          reduce using rule 60 (condi_anidado -> condicion AND condi_anidado .)
    PUNTOYCOMA      reduce using rule 60 (condi_anidado -> condicion AND condi_anidado .)


state 103

    (62) condi_anidado -> condicion OR condi_anidado .

    RPAREN          reduce using rule 62 (condi_anidado -> condicion OR condi_anidado .)
    PUNTOYCOMA      reduce using rule 62 (condi_anidado -> condicion OR condi_anidado .)


state 104

    (61) condi_anidado -> NOT condicion AND . condi_anidado
    (60) condi_anidado -> . condicion AND condi_anidado
    (61) condi_anidado -> . NOT condicion AND condi_anidado
    (62) condi_anidado -> . condicion OR condi_anidado
    (63) condi_anidado -> . NOT condicion OR condi_anidado
    (64) condi_anidado -> . condicion
    (65) condi_anidado -> . NOT condicion
    (66) condicion -> . factor COMPARADOR factor
    (67) condicion -> . factor IGUALA factor
    (68) condicion -> . factor DIFERENTE factor
    (69) condicion -> . TRUE
    (70) condicion -> . FALSE
    (72) factor -> . LPAREN expresion RPAREN
    (73) factor -> . NUMBER
    (74) factor -> . TEXTO
    (75) factor -> . ID

    NOT             shift and go to state 46
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    LPAREN          shift and go to state 43
    NUMBER          shift and go to state 50
    TEXTO           shift and go to state 51
    ID              shift and go to state 52

    condicion                      shift and go to state 45
    condi_anidado                  shift and go to state 128
    factor                         shift and go to state 47

state 105

    (63) condi_anidado -> NOT condicion OR . condi_anidado
    (60) condi_anidado -> . condicion AND condi_anidado
    (61) condi_anidado -> . NOT condicion AND condi_anidado
    (62) condi_anidado -> . condicion OR condi_anidado
    (63) condi_anidado -> . NOT condicion OR condi_anidado
    (64) condi_anidado -> . condicion
    (65) condi_anidado -> . NOT condicion
    (66) condicion -> . factor COMPARADOR factor
    (67) condicion -> . factor IGUALA factor
    (68) condicion -> . factor DIFERENTE factor
    (69) condicion -> . TRUE
    (70) condicion -> . FALSE
    (72) factor -> . LPAREN expresion RPAREN
    (73) factor -> . NUMBER
    (74) factor -> . TEXTO
    (75) factor -> . ID

    NOT             shift and go to state 46
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    LPAREN          shift and go to state 43
    NUMBER          shift and go to state 50
    TEXTO           shift and go to state 51
    ID              shift and go to state 52

    condicion                      shift and go to state 45
    condi_anidado                  shift and go to state 129
    factor                         shift and go to state 47

state 106

    (66) condicion -> factor COMPARADOR factor .

    AND             reduce using rule 66 (condicion -> factor COMPARADOR factor .)
    OR              reduce using rule 66 (condicion -> factor COMPARADOR factor .)
    RPAREN          reduce using rule 66 (condicion -> factor COMPARADOR factor .)
    PUNTOYCOMA      reduce using rule 66 (condicion -> factor COMPARADOR factor .)


state 107

    (67) condicion -> factor IGUALA factor .

    AND             reduce using rule 67 (condicion -> factor IGUALA factor .)
    OR              reduce using rule 67 (condicion -> factor IGUALA factor .)
    RPAREN          reduce using rule 67 (condicion -> factor IGUALA factor .)
    PUNTOYCOMA      reduce using rule 67 (condicion -> factor IGUALA factor .)


state 108

    (68) condicion -> factor DIFERENTE factor .

    AND             reduce using rule 68 (condicion -> factor DIFERENTE factor .)
    OR              reduce using rule 68 (condicion -> factor DIFERENTE factor .)
    RPAREN          reduce using rule 68 (condicion -> factor DIFERENTE factor .)
    PUNTOYCOMA      reduce using rule 68 (condicion -> factor DIFERENTE factor .)


state 109

    (27) while -> WHILE LPAREN condi_anidado RPAREN LLLAVE . sentencias RLLAVE
    (1) sentencias -> . variable sentencias
    (2) sentencias -> . metodos sentencias
    (3) sentencias -> . iteracion sentencias
    (4) sentencias -> . objeto PUNTOYCOMA sentencias
    (5) sentencias -> . newset sentencias
    (6) sentencias -> . array sentencias
    (7) sentencias -> . empty
    (8) sentencias -> . if sentencias
    (9) sentencias -> . while sentencias
    (10) sentencias -> . prompt sentencias
    (13) variable -> . VAR ID PUNTOYCOMA
    (14) variable -> . VAR ID IGUAL expresion PUNTOYCOMA
    (15) variable -> . VAR ID IGUAL condi_anidado PUNTOYCOMA
    (11) metodos -> . imprimir PUNTOYCOMA
    (12) metodos -> . metodo PUNTOYCOMA
    (16) iteracion -> . FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE
    (17) iteracion -> . FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE
    (18) iteracion -> . FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE
    (19) iteracion -> . FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE
    (35) objeto -> . VAR ID IGUAL LLLAVE RLLAVE
    (36) objeto -> . VAR ID IGUAL LLLAVE keyvalue RLLAVE
    (45) newset -> . VAR ID IGUAL NEW SET LPAREN RPAREN PUNTOYCOMA
    (46) newset -> . VAR ID IGUAL NEW SET LPAREN contenido RPAREN PUNTOYCOMA
    (47) array -> . VAR ID IGUAL contenido PUNTOYCOMA
    (48) array -> . VAR ID IGUAL NEW ARRAY LPAREN elemento RPAREN PUNTOYCOMA
    (76) empty -> .
    (20) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE
    (21) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE else
    (22) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif
    (23) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif else
    (27) while -> . WHILE LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE
    (28) prompt -> . VAR ID IGUAL PROMPT LPAREN expresion RPAREN PUNTOYCOMA
    (29) prompt -> . VAR ID IGUAL PROMPT LPAREN expresion COMA expresion RPAREN PUNTOYCOMA
    (30) imprimir -> . CONSOLE METODO LPAREN expresion RPAREN
    (31) metodo -> . ID METODO LPAREN RPAREN
    (32) metodo -> . ID METODO LPAREN expresion RPAREN
    (33) metodo -> . ID METODO LPAREN expresion COMA expresion RPAREN
    (34) metodo -> . ID METODO

    VAR             shift and go to state 12
    FOR             shift and go to state 16
    RLLAVE          reduce using rule 76 (empty -> .)
    IF              shift and go to state 17
    WHILE           shift and go to state 18
    CONSOLE         shift and go to state 19
    ID              shift and go to state 13

    sentencias                     shift and go to state 130
    variable                       shift and go to state 2
    metodos                        shift and go to state 3
    iteracion                      shift and go to state 4
    objeto                         shift and go to state 5
    newset                         shift and go to state 6
    array                          shift and go to state 7
    empty                          shift and go to state 8
    if                             shift and go to state 9
    while                          shift and go to state 10
    prompt                         shift and go to state 11
    imprimir                       shift and go to state 14
    metodo                         shift and go to state 15

state 110

    (30) imprimir -> CONSOLE METODO LPAREN expresion RPAREN .

    PUNTOYCOMA      reduce using rule 30 (imprimir -> CONSOLE METODO LPAREN expresion RPAREN .)


state 111

    (54) expresion -> expresion PLUS factor .

    PUNTOYCOMA      reduce using rule 54 (expresion -> expresion PLUS factor .)
    PLUS            reduce using rule 54 (expresion -> expresion PLUS factor .)
    MINUS           reduce using rule 54 (expresion -> expresion PLUS factor .)
    TIMES           reduce using rule 54 (expresion -> expresion PLUS factor .)
    DIVIDE          reduce using rule 54 (expresion -> expresion PLUS factor .)
    POTENCIA        reduce using rule 54 (expresion -> expresion PLUS factor .)
    RPAREN          reduce using rule 54 (expresion -> expresion PLUS factor .)
    COMA            reduce using rule 54 (expresion -> expresion PLUS factor .)
    RCORCH          reduce using rule 54 (expresion -> expresion PLUS factor .)


state 112

    (55) expresion -> expresion MINUS term .

    PUNTOYCOMA      reduce using rule 55 (expresion -> expresion MINUS term .)
    PLUS            reduce using rule 55 (expresion -> expresion MINUS term .)
    MINUS           reduce using rule 55 (expresion -> expresion MINUS term .)
    TIMES           reduce using rule 55 (expresion -> expresion MINUS term .)
    DIVIDE          reduce using rule 55 (expresion -> expresion MINUS term .)
    POTENCIA        reduce using rule 55 (expresion -> expresion MINUS term .)
    RPAREN          reduce using rule 55 (expresion -> expresion MINUS term .)
    COMA            reduce using rule 55 (expresion -> expresion MINUS term .)
    RCORCH          reduce using rule 55 (expresion -> expresion MINUS term .)


state 113

    (56) expresion -> expresion TIMES term .

    PUNTOYCOMA      reduce using rule 56 (expresion -> expresion TIMES term .)
    PLUS            reduce using rule 56 (expresion -> expresion TIMES term .)
    MINUS           reduce using rule 56 (expresion -> expresion TIMES term .)
    TIMES           reduce using rule 56 (expresion -> expresion TIMES term .)
    DIVIDE          reduce using rule 56 (expresion -> expresion TIMES term .)
    POTENCIA        reduce using rule 56 (expresion -> expresion TIMES term .)
    RPAREN          reduce using rule 56 (expresion -> expresion TIMES term .)
    COMA            reduce using rule 56 (expresion -> expresion TIMES term .)
    RCORCH          reduce using rule 56 (expresion -> expresion TIMES term .)


state 114

    (57) expresion -> expresion DIVIDE term .

    PUNTOYCOMA      reduce using rule 57 (expresion -> expresion DIVIDE term .)
    PLUS            reduce using rule 57 (expresion -> expresion DIVIDE term .)
    MINUS           reduce using rule 57 (expresion -> expresion DIVIDE term .)
    TIMES           reduce using rule 57 (expresion -> expresion DIVIDE term .)
    DIVIDE          reduce using rule 57 (expresion -> expresion DIVIDE term .)
    POTENCIA        reduce using rule 57 (expresion -> expresion DIVIDE term .)
    RPAREN          reduce using rule 57 (expresion -> expresion DIVIDE term .)
    COMA            reduce using rule 57 (expresion -> expresion DIVIDE term .)
    RCORCH          reduce using rule 57 (expresion -> expresion DIVIDE term .)


state 115

    (58) expresion -> expresion POTENCIA term .

    PUNTOYCOMA      reduce using rule 58 (expresion -> expresion POTENCIA term .)
    PLUS            reduce using rule 58 (expresion -> expresion POTENCIA term .)
    MINUS           reduce using rule 58 (expresion -> expresion POTENCIA term .)
    TIMES           reduce using rule 58 (expresion -> expresion POTENCIA term .)
    DIVIDE          reduce using rule 58 (expresion -> expresion POTENCIA term .)
    POTENCIA        reduce using rule 58 (expresion -> expresion POTENCIA term .)
    RPAREN          reduce using rule 58 (expresion -> expresion POTENCIA term .)
    COMA            reduce using rule 58 (expresion -> expresion POTENCIA term .)
    RCORCH          reduce using rule 58 (expresion -> expresion POTENCIA term .)


state 116

    (37) keyvalue -> ID DOSPUNTOS . factor
    (38) keyvalue -> ID DOSPUNTOS . factor COMA keyvalue
    (39) keyvalue -> ID DOSPUNTOS . contenido
    (40) keyvalue -> ID DOSPUNTOS . contenido COMA keyvalue
    (41) keyvalue -> ID DOSPUNTOS . TRUE
    (42) keyvalue -> ID DOSPUNTOS . TRUE COMA keyvalue
    (43) keyvalue -> ID DOSPUNTOS . FALSE
    (44) keyvalue -> ID DOSPUNTOS . FALSE COMA keyvalue
    (72) factor -> . LPAREN expresion RPAREN
    (73) factor -> . NUMBER
    (74) factor -> . TEXTO
    (75) factor -> . ID
    (49) contenido -> . LCORCH elemento RCORCH
    (50) contenido -> . LCORCH RCORCH
    (51) contenido -> . LCORCH expresion RCORCH

    TRUE            shift and go to state 133
    FALSE           shift and go to state 134
    LPAREN          shift and go to state 43
    NUMBER          shift and go to state 50
    TEXTO           shift and go to state 51
    ID              shift and go to state 52
    LCORCH          shift and go to state 63

    factor                         shift and go to state 131
    contenido                      shift and go to state 132

state 117

    (36) objeto -> VAR ID IGUAL LLLAVE keyvalue RLLAVE .

    PUNTOYCOMA      reduce using rule 36 (objeto -> VAR ID IGUAL LLLAVE keyvalue RLLAVE .)


state 118

    (45) newset -> VAR ID IGUAL NEW SET LPAREN . RPAREN PUNTOYCOMA
    (46) newset -> VAR ID IGUAL NEW SET LPAREN . contenido RPAREN PUNTOYCOMA
    (49) contenido -> . LCORCH elemento RCORCH
    (50) contenido -> . LCORCH RCORCH
    (51) contenido -> . LCORCH expresion RCORCH

    RPAREN          shift and go to state 135
    LCORCH          shift and go to state 63

    contenido                      shift and go to state 136

state 119

    (48) array -> VAR ID IGUAL NEW ARRAY LPAREN . elemento RPAREN PUNTOYCOMA
    (52) elemento -> . expresion
    (53) elemento -> . expresion COMA elemento
    (54) expresion -> . expresion PLUS factor
    (55) expresion -> . expresion MINUS term
    (56) expresion -> . expresion TIMES term
    (57) expresion -> . expresion DIVIDE term
    (58) expresion -> . expresion POTENCIA term
    (59) expresion -> . term
    (71) term -> . factor
    (72) factor -> . LPAREN expresion RPAREN
    (73) factor -> . NUMBER
    (74) factor -> . TEXTO
    (75) factor -> . ID

    LPAREN          shift and go to state 43
    NUMBER          shift and go to state 50
    TEXTO           shift and go to state 51
    ID              shift and go to state 52

    elemento                       shift and go to state 137
    expresion                      shift and go to state 138
    factor                         shift and go to state 66
    term                           shift and go to state 62

state 120

    (28) prompt -> VAR ID IGUAL PROMPT LPAREN expresion . RPAREN PUNTOYCOMA
    (29) prompt -> VAR ID IGUAL PROMPT LPAREN expresion . COMA expresion RPAREN PUNTOYCOMA
    (54) expresion -> expresion . PLUS factor
    (55) expresion -> expresion . MINUS term
    (56) expresion -> expresion . TIMES term
    (57) expresion -> expresion . DIVIDE term
    (58) expresion -> expresion . POTENCIA term

    RPAREN          shift and go to state 139
    COMA            shift and go to state 140
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    TIMES           shift and go to state 82
    DIVIDE          shift and go to state 83
    POTENCIA        shift and go to state 84


state 121

    (49) contenido -> LCORCH elemento RCORCH .

    PUNTOYCOMA      reduce using rule 49 (contenido -> LCORCH elemento RCORCH .)
    COMA            reduce using rule 49 (contenido -> LCORCH elemento RCORCH .)
    RLLAVE          reduce using rule 49 (contenido -> LCORCH elemento RCORCH .)
    RPAREN          reduce using rule 49 (contenido -> LCORCH elemento RCORCH .)


state 122

    (51) contenido -> LCORCH expresion RCORCH .

    PUNTOYCOMA      reduce using rule 51 (contenido -> LCORCH expresion RCORCH .)
    COMA            reduce using rule 51 (contenido -> LCORCH expresion RCORCH .)
    RLLAVE          reduce using rule 51 (contenido -> LCORCH expresion RCORCH .)
    RPAREN          reduce using rule 51 (contenido -> LCORCH expresion RCORCH .)


state 123

    (53) elemento -> expresion COMA . elemento
    (52) elemento -> . expresion
    (53) elemento -> . expresion COMA elemento
    (54) expresion -> . expresion PLUS factor
    (55) expresion -> . expresion MINUS term
    (56) expresion -> . expresion TIMES term
    (57) expresion -> . expresion DIVIDE term
    (58) expresion -> . expresion POTENCIA term
    (59) expresion -> . term
    (71) term -> . factor
    (72) factor -> . LPAREN expresion RPAREN
    (73) factor -> . NUMBER
    (74) factor -> . TEXTO
    (75) factor -> . ID

    LPAREN          shift and go to state 43
    NUMBER          shift and go to state 50
    TEXTO           shift and go to state 51
    ID              shift and go to state 52

    expresion                      shift and go to state 138
    elemento                       shift and go to state 141
    factor                         shift and go to state 66
    term                           shift and go to state 62

state 124

    (33) metodo -> ID METODO LPAREN expresion COMA expresion . RPAREN
    (54) expresion -> expresion . PLUS factor
    (55) expresion -> expresion . MINUS term
    (56) expresion -> expresion . TIMES term
    (57) expresion -> expresion . DIVIDE term
    (58) expresion -> expresion . POTENCIA term

    RPAREN          shift and go to state 142
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    TIMES           shift and go to state 82
    DIVIDE          shift and go to state 83
    POTENCIA        shift and go to state 84


state 125

    (16) iteracion -> FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA . condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE
    (18) iteracion -> FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA . condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE
    (66) condicion -> . factor COMPARADOR factor
    (67) condicion -> . factor IGUALA factor
    (68) condicion -> . factor DIFERENTE factor
    (69) condicion -> . TRUE
    (70) condicion -> . FALSE
    (72) factor -> . LPAREN expresion RPAREN
    (73) factor -> . NUMBER
    (74) factor -> . TEXTO
    (75) factor -> . ID

    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    LPAREN          shift and go to state 43
    NUMBER          shift and go to state 50
    TEXTO           shift and go to state 51
    ID              shift and go to state 52

    condicion                      shift and go to state 143
    factor                         shift and go to state 47

state 126

    (17) iteracion -> FOR LPAREN VAR ID IGUAL NUMBER . PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE
    (19) iteracion -> FOR LPAREN VAR ID IGUAL NUMBER . PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE

    PUNTOYCOMA      shift and go to state 144


state 127

    (20) if -> IF LPAREN condi_anidado RPAREN LLLAVE sentencias . RLLAVE
    (21) if -> IF LPAREN condi_anidado RPAREN LLLAVE sentencias . RLLAVE else
    (22) if -> IF LPAREN condi_anidado RPAREN LLLAVE sentencias . RLLAVE elif
    (23) if -> IF LPAREN condi_anidado RPAREN LLLAVE sentencias . RLLAVE elif else

    RLLAVE          shift and go to state 145


state 128

    (61) condi_anidado -> NOT condicion AND condi_anidado .

    RPAREN          reduce using rule 61 (condi_anidado -> NOT condicion AND condi_anidado .)
    PUNTOYCOMA      reduce using rule 61 (condi_anidado -> NOT condicion AND condi_anidado .)


state 129

    (63) condi_anidado -> NOT condicion OR condi_anidado .

    RPAREN          reduce using rule 63 (condi_anidado -> NOT condicion OR condi_anidado .)
    PUNTOYCOMA      reduce using rule 63 (condi_anidado -> NOT condicion OR condi_anidado .)


state 130

    (27) while -> WHILE LPAREN condi_anidado RPAREN LLLAVE sentencias . RLLAVE

    RLLAVE          shift and go to state 146


state 131

    (37) keyvalue -> ID DOSPUNTOS factor .
    (38) keyvalue -> ID DOSPUNTOS factor . COMA keyvalue

    RLLAVE          reduce using rule 37 (keyvalue -> ID DOSPUNTOS factor .)
    COMA            shift and go to state 147


state 132

    (39) keyvalue -> ID DOSPUNTOS contenido .
    (40) keyvalue -> ID DOSPUNTOS contenido . COMA keyvalue

    RLLAVE          reduce using rule 39 (keyvalue -> ID DOSPUNTOS contenido .)
    COMA            shift and go to state 148


state 133

    (41) keyvalue -> ID DOSPUNTOS TRUE .
    (42) keyvalue -> ID DOSPUNTOS TRUE . COMA keyvalue

    RLLAVE          reduce using rule 41 (keyvalue -> ID DOSPUNTOS TRUE .)
    COMA            shift and go to state 149


state 134

    (43) keyvalue -> ID DOSPUNTOS FALSE .
    (44) keyvalue -> ID DOSPUNTOS FALSE . COMA keyvalue

    RLLAVE          reduce using rule 43 (keyvalue -> ID DOSPUNTOS FALSE .)
    COMA            shift and go to state 150


state 135

    (45) newset -> VAR ID IGUAL NEW SET LPAREN RPAREN . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 151


state 136

    (46) newset -> VAR ID IGUAL NEW SET LPAREN contenido . RPAREN PUNTOYCOMA

    RPAREN          shift and go to state 152


state 137

    (48) array -> VAR ID IGUAL NEW ARRAY LPAREN elemento . RPAREN PUNTOYCOMA

    RPAREN          shift and go to state 153


state 138

    (52) elemento -> expresion .
    (53) elemento -> expresion . COMA elemento
    (54) expresion -> expresion . PLUS factor
    (55) expresion -> expresion . MINUS term
    (56) expresion -> expresion . TIMES term
    (57) expresion -> expresion . DIVIDE term
    (58) expresion -> expresion . POTENCIA term

    RPAREN          reduce using rule 52 (elemento -> expresion .)
    RCORCH          reduce using rule 52 (elemento -> expresion .)
    COMA            shift and go to state 123
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    TIMES           shift and go to state 82
    DIVIDE          shift and go to state 83
    POTENCIA        shift and go to state 84


state 139

    (28) prompt -> VAR ID IGUAL PROMPT LPAREN expresion RPAREN . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 154


state 140

    (29) prompt -> VAR ID IGUAL PROMPT LPAREN expresion COMA . expresion RPAREN PUNTOYCOMA
    (54) expresion -> . expresion PLUS factor
    (55) expresion -> . expresion MINUS term
    (56) expresion -> . expresion TIMES term
    (57) expresion -> . expresion DIVIDE term
    (58) expresion -> . expresion POTENCIA term
    (59) expresion -> . term
    (71) term -> . factor
    (72) factor -> . LPAREN expresion RPAREN
    (73) factor -> . NUMBER
    (74) factor -> . TEXTO
    (75) factor -> . ID

    LPAREN          shift and go to state 43
    NUMBER          shift and go to state 50
    TEXTO           shift and go to state 51
    ID              shift and go to state 52

    expresion                      shift and go to state 155
    factor                         shift and go to state 66
    term                           shift and go to state 62

state 141

    (53) elemento -> expresion COMA elemento .

    RCORCH          reduce using rule 53 (elemento -> expresion COMA elemento .)
    RPAREN          reduce using rule 53 (elemento -> expresion COMA elemento .)


state 142

    (33) metodo -> ID METODO LPAREN expresion COMA expresion RPAREN .

    PUNTOYCOMA      reduce using rule 33 (metodo -> ID METODO LPAREN expresion COMA expresion RPAREN .)


state 143

    (16) iteracion -> FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion . PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE
    (18) iteracion -> FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion . PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE

    PUNTOYCOMA      shift and go to state 156


state 144

    (17) iteracion -> FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA . condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE
    (19) iteracion -> FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA . condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE
    (66) condicion -> . factor COMPARADOR factor
    (67) condicion -> . factor IGUALA factor
    (68) condicion -> . factor DIFERENTE factor
    (69) condicion -> . TRUE
    (70) condicion -> . FALSE
    (72) factor -> . LPAREN expresion RPAREN
    (73) factor -> . NUMBER
    (74) factor -> . TEXTO
    (75) factor -> . ID

    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    LPAREN          shift and go to state 43
    NUMBER          shift and go to state 50
    TEXTO           shift and go to state 51
    ID              shift and go to state 52

    condicion                      shift and go to state 157
    factor                         shift and go to state 47

state 145

    (20) if -> IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE .
    (21) if -> IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE . else
    (22) if -> IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE . elif
    (23) if -> IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE . elif else
    (24) else -> . ELSE LLLAVE sentencias RLLAVE
    (25) elif -> . ELIF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif
    (26) elif -> . ELIF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE

    VAR             reduce using rule 20 (if -> IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE .)
    FOR             reduce using rule 20 (if -> IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE .)
    IF              reduce using rule 20 (if -> IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE .)
    WHILE           reduce using rule 20 (if -> IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE .)
    CONSOLE         reduce using rule 20 (if -> IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE .)
    ID              reduce using rule 20 (if -> IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE .)
    $end            reduce using rule 20 (if -> IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE .)
    RLLAVE          reduce using rule 20 (if -> IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE .)
    ELSE            shift and go to state 160
    ELIF            shift and go to state 161

    else                           shift and go to state 158
    elif                           shift and go to state 159

state 146

    (27) while -> WHILE LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE .

    VAR             reduce using rule 27 (while -> WHILE LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE .)
    FOR             reduce using rule 27 (while -> WHILE LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE .)
    IF              reduce using rule 27 (while -> WHILE LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE .)
    WHILE           reduce using rule 27 (while -> WHILE LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE .)
    CONSOLE         reduce using rule 27 (while -> WHILE LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE .)
    ID              reduce using rule 27 (while -> WHILE LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE .)
    $end            reduce using rule 27 (while -> WHILE LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE .)
    RLLAVE          reduce using rule 27 (while -> WHILE LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE .)


state 147

    (38) keyvalue -> ID DOSPUNTOS factor COMA . keyvalue
    (37) keyvalue -> . ID DOSPUNTOS factor
    (38) keyvalue -> . ID DOSPUNTOS factor COMA keyvalue
    (39) keyvalue -> . ID DOSPUNTOS contenido
    (40) keyvalue -> . ID DOSPUNTOS contenido COMA keyvalue
    (41) keyvalue -> . ID DOSPUNTOS TRUE
    (42) keyvalue -> . ID DOSPUNTOS TRUE COMA keyvalue
    (43) keyvalue -> . ID DOSPUNTOS FALSE
    (44) keyvalue -> . ID DOSPUNTOS FALSE COMA keyvalue

    ID              shift and go to state 86

    keyvalue                       shift and go to state 162

state 148

    (40) keyvalue -> ID DOSPUNTOS contenido COMA . keyvalue
    (37) keyvalue -> . ID DOSPUNTOS factor
    (38) keyvalue -> . ID DOSPUNTOS factor COMA keyvalue
    (39) keyvalue -> . ID DOSPUNTOS contenido
    (40) keyvalue -> . ID DOSPUNTOS contenido COMA keyvalue
    (41) keyvalue -> . ID DOSPUNTOS TRUE
    (42) keyvalue -> . ID DOSPUNTOS TRUE COMA keyvalue
    (43) keyvalue -> . ID DOSPUNTOS FALSE
    (44) keyvalue -> . ID DOSPUNTOS FALSE COMA keyvalue

    ID              shift and go to state 86

    keyvalue                       shift and go to state 163

state 149

    (42) keyvalue -> ID DOSPUNTOS TRUE COMA . keyvalue
    (37) keyvalue -> . ID DOSPUNTOS factor
    (38) keyvalue -> . ID DOSPUNTOS factor COMA keyvalue
    (39) keyvalue -> . ID DOSPUNTOS contenido
    (40) keyvalue -> . ID DOSPUNTOS contenido COMA keyvalue
    (41) keyvalue -> . ID DOSPUNTOS TRUE
    (42) keyvalue -> . ID DOSPUNTOS TRUE COMA keyvalue
    (43) keyvalue -> . ID DOSPUNTOS FALSE
    (44) keyvalue -> . ID DOSPUNTOS FALSE COMA keyvalue

    ID              shift and go to state 86

    keyvalue                       shift and go to state 164

state 150

    (44) keyvalue -> ID DOSPUNTOS FALSE COMA . keyvalue
    (37) keyvalue -> . ID DOSPUNTOS factor
    (38) keyvalue -> . ID DOSPUNTOS factor COMA keyvalue
    (39) keyvalue -> . ID DOSPUNTOS contenido
    (40) keyvalue -> . ID DOSPUNTOS contenido COMA keyvalue
    (41) keyvalue -> . ID DOSPUNTOS TRUE
    (42) keyvalue -> . ID DOSPUNTOS TRUE COMA keyvalue
    (43) keyvalue -> . ID DOSPUNTOS FALSE
    (44) keyvalue -> . ID DOSPUNTOS FALSE COMA keyvalue

    ID              shift and go to state 86

    keyvalue                       shift and go to state 165

state 151

    (45) newset -> VAR ID IGUAL NEW SET LPAREN RPAREN PUNTOYCOMA .

    VAR             reduce using rule 45 (newset -> VAR ID IGUAL NEW SET LPAREN RPAREN PUNTOYCOMA .)
    FOR             reduce using rule 45 (newset -> VAR ID IGUAL NEW SET LPAREN RPAREN PUNTOYCOMA .)
    IF              reduce using rule 45 (newset -> VAR ID IGUAL NEW SET LPAREN RPAREN PUNTOYCOMA .)
    WHILE           reduce using rule 45 (newset -> VAR ID IGUAL NEW SET LPAREN RPAREN PUNTOYCOMA .)
    CONSOLE         reduce using rule 45 (newset -> VAR ID IGUAL NEW SET LPAREN RPAREN PUNTOYCOMA .)
    ID              reduce using rule 45 (newset -> VAR ID IGUAL NEW SET LPAREN RPAREN PUNTOYCOMA .)
    $end            reduce using rule 45 (newset -> VAR ID IGUAL NEW SET LPAREN RPAREN PUNTOYCOMA .)
    RLLAVE          reduce using rule 45 (newset -> VAR ID IGUAL NEW SET LPAREN RPAREN PUNTOYCOMA .)


state 152

    (46) newset -> VAR ID IGUAL NEW SET LPAREN contenido RPAREN . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 166


state 153

    (48) array -> VAR ID IGUAL NEW ARRAY LPAREN elemento RPAREN . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 167


state 154

    (28) prompt -> VAR ID IGUAL PROMPT LPAREN expresion RPAREN PUNTOYCOMA .

    VAR             reduce using rule 28 (prompt -> VAR ID IGUAL PROMPT LPAREN expresion RPAREN PUNTOYCOMA .)
    FOR             reduce using rule 28 (prompt -> VAR ID IGUAL PROMPT LPAREN expresion RPAREN PUNTOYCOMA .)
    IF              reduce using rule 28 (prompt -> VAR ID IGUAL PROMPT LPAREN expresion RPAREN PUNTOYCOMA .)
    WHILE           reduce using rule 28 (prompt -> VAR ID IGUAL PROMPT LPAREN expresion RPAREN PUNTOYCOMA .)
    CONSOLE         reduce using rule 28 (prompt -> VAR ID IGUAL PROMPT LPAREN expresion RPAREN PUNTOYCOMA .)
    ID              reduce using rule 28 (prompt -> VAR ID IGUAL PROMPT LPAREN expresion RPAREN PUNTOYCOMA .)
    $end            reduce using rule 28 (prompt -> VAR ID IGUAL PROMPT LPAREN expresion RPAREN PUNTOYCOMA .)
    RLLAVE          reduce using rule 28 (prompt -> VAR ID IGUAL PROMPT LPAREN expresion RPAREN PUNTOYCOMA .)


state 155

    (29) prompt -> VAR ID IGUAL PROMPT LPAREN expresion COMA expresion . RPAREN PUNTOYCOMA
    (54) expresion -> expresion . PLUS factor
    (55) expresion -> expresion . MINUS term
    (56) expresion -> expresion . TIMES term
    (57) expresion -> expresion . DIVIDE term
    (58) expresion -> expresion . POTENCIA term

    RPAREN          shift and go to state 168
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    TIMES           shift and go to state 82
    DIVIDE          shift and go to state 83
    POTENCIA        shift and go to state 84


state 156

    (16) iteracion -> FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA . ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE
    (18) iteracion -> FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA . ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE

    ID              shift and go to state 169


state 157

    (17) iteracion -> FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion . PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE
    (19) iteracion -> FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion . PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE

    PUNTOYCOMA      shift and go to state 170


state 158

    (21) if -> IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE else .

    VAR             reduce using rule 21 (if -> IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE else .)
    FOR             reduce using rule 21 (if -> IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE else .)
    IF              reduce using rule 21 (if -> IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE else .)
    WHILE           reduce using rule 21 (if -> IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE else .)
    CONSOLE         reduce using rule 21 (if -> IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE else .)
    ID              reduce using rule 21 (if -> IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE else .)
    $end            reduce using rule 21 (if -> IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE else .)
    RLLAVE          reduce using rule 21 (if -> IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE else .)


state 159

    (22) if -> IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif .
    (23) if -> IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif . else
    (24) else -> . ELSE LLLAVE sentencias RLLAVE

    VAR             reduce using rule 22 (if -> IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif .)
    FOR             reduce using rule 22 (if -> IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif .)
    IF              reduce using rule 22 (if -> IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif .)
    WHILE           reduce using rule 22 (if -> IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif .)
    CONSOLE         reduce using rule 22 (if -> IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif .)
    ID              reduce using rule 22 (if -> IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif .)
    $end            reduce using rule 22 (if -> IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif .)
    RLLAVE          reduce using rule 22 (if -> IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif .)
    ELSE            shift and go to state 160

    else                           shift and go to state 171

state 160

    (24) else -> ELSE . LLLAVE sentencias RLLAVE

    LLLAVE          shift and go to state 172


state 161

    (25) elif -> ELIF . LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif
    (26) elif -> ELIF . LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE

    LPAREN          shift and go to state 173


state 162

    (38) keyvalue -> ID DOSPUNTOS factor COMA keyvalue .

    RLLAVE          reduce using rule 38 (keyvalue -> ID DOSPUNTOS factor COMA keyvalue .)


state 163

    (40) keyvalue -> ID DOSPUNTOS contenido COMA keyvalue .

    RLLAVE          reduce using rule 40 (keyvalue -> ID DOSPUNTOS contenido COMA keyvalue .)


state 164

    (42) keyvalue -> ID DOSPUNTOS TRUE COMA keyvalue .

    RLLAVE          reduce using rule 42 (keyvalue -> ID DOSPUNTOS TRUE COMA keyvalue .)


state 165

    (44) keyvalue -> ID DOSPUNTOS FALSE COMA keyvalue .

    RLLAVE          reduce using rule 44 (keyvalue -> ID DOSPUNTOS FALSE COMA keyvalue .)


state 166

    (46) newset -> VAR ID IGUAL NEW SET LPAREN contenido RPAREN PUNTOYCOMA .

    VAR             reduce using rule 46 (newset -> VAR ID IGUAL NEW SET LPAREN contenido RPAREN PUNTOYCOMA .)
    FOR             reduce using rule 46 (newset -> VAR ID IGUAL NEW SET LPAREN contenido RPAREN PUNTOYCOMA .)
    IF              reduce using rule 46 (newset -> VAR ID IGUAL NEW SET LPAREN contenido RPAREN PUNTOYCOMA .)
    WHILE           reduce using rule 46 (newset -> VAR ID IGUAL NEW SET LPAREN contenido RPAREN PUNTOYCOMA .)
    CONSOLE         reduce using rule 46 (newset -> VAR ID IGUAL NEW SET LPAREN contenido RPAREN PUNTOYCOMA .)
    ID              reduce using rule 46 (newset -> VAR ID IGUAL NEW SET LPAREN contenido RPAREN PUNTOYCOMA .)
    $end            reduce using rule 46 (newset -> VAR ID IGUAL NEW SET LPAREN contenido RPAREN PUNTOYCOMA .)
    RLLAVE          reduce using rule 46 (newset -> VAR ID IGUAL NEW SET LPAREN contenido RPAREN PUNTOYCOMA .)


state 167

    (48) array -> VAR ID IGUAL NEW ARRAY LPAREN elemento RPAREN PUNTOYCOMA .

    VAR             reduce using rule 48 (array -> VAR ID IGUAL NEW ARRAY LPAREN elemento RPAREN PUNTOYCOMA .)
    FOR             reduce using rule 48 (array -> VAR ID IGUAL NEW ARRAY LPAREN elemento RPAREN PUNTOYCOMA .)
    IF              reduce using rule 48 (array -> VAR ID IGUAL NEW ARRAY LPAREN elemento RPAREN PUNTOYCOMA .)
    WHILE           reduce using rule 48 (array -> VAR ID IGUAL NEW ARRAY LPAREN elemento RPAREN PUNTOYCOMA .)
    CONSOLE         reduce using rule 48 (array -> VAR ID IGUAL NEW ARRAY LPAREN elemento RPAREN PUNTOYCOMA .)
    ID              reduce using rule 48 (array -> VAR ID IGUAL NEW ARRAY LPAREN elemento RPAREN PUNTOYCOMA .)
    $end            reduce using rule 48 (array -> VAR ID IGUAL NEW ARRAY LPAREN elemento RPAREN PUNTOYCOMA .)
    RLLAVE          reduce using rule 48 (array -> VAR ID IGUAL NEW ARRAY LPAREN elemento RPAREN PUNTOYCOMA .)


state 168

    (29) prompt -> VAR ID IGUAL PROMPT LPAREN expresion COMA expresion RPAREN . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 174


state 169

    (16) iteracion -> FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID . INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE
    (18) iteracion -> FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID . OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE

    INDECREMENTAL   shift and go to state 175
    OPERADORES      shift and go to state 176


state 170

    (17) iteracion -> FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA . ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE
    (19) iteracion -> FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA . ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE

    ID              shift and go to state 177


state 171

    (23) if -> IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif else .

    VAR             reduce using rule 23 (if -> IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif else .)
    FOR             reduce using rule 23 (if -> IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif else .)
    IF              reduce using rule 23 (if -> IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif else .)
    WHILE           reduce using rule 23 (if -> IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif else .)
    CONSOLE         reduce using rule 23 (if -> IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif else .)
    ID              reduce using rule 23 (if -> IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif else .)
    $end            reduce using rule 23 (if -> IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif else .)
    RLLAVE          reduce using rule 23 (if -> IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif else .)


state 172

    (24) else -> ELSE LLLAVE . sentencias RLLAVE
    (1) sentencias -> . variable sentencias
    (2) sentencias -> . metodos sentencias
    (3) sentencias -> . iteracion sentencias
    (4) sentencias -> . objeto PUNTOYCOMA sentencias
    (5) sentencias -> . newset sentencias
    (6) sentencias -> . array sentencias
    (7) sentencias -> . empty
    (8) sentencias -> . if sentencias
    (9) sentencias -> . while sentencias
    (10) sentencias -> . prompt sentencias
    (13) variable -> . VAR ID PUNTOYCOMA
    (14) variable -> . VAR ID IGUAL expresion PUNTOYCOMA
    (15) variable -> . VAR ID IGUAL condi_anidado PUNTOYCOMA
    (11) metodos -> . imprimir PUNTOYCOMA
    (12) metodos -> . metodo PUNTOYCOMA
    (16) iteracion -> . FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE
    (17) iteracion -> . FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE
    (18) iteracion -> . FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE
    (19) iteracion -> . FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE
    (35) objeto -> . VAR ID IGUAL LLLAVE RLLAVE
    (36) objeto -> . VAR ID IGUAL LLLAVE keyvalue RLLAVE
    (45) newset -> . VAR ID IGUAL NEW SET LPAREN RPAREN PUNTOYCOMA
    (46) newset -> . VAR ID IGUAL NEW SET LPAREN contenido RPAREN PUNTOYCOMA
    (47) array -> . VAR ID IGUAL contenido PUNTOYCOMA
    (48) array -> . VAR ID IGUAL NEW ARRAY LPAREN elemento RPAREN PUNTOYCOMA
    (76) empty -> .
    (20) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE
    (21) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE else
    (22) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif
    (23) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif else
    (27) while -> . WHILE LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE
    (28) prompt -> . VAR ID IGUAL PROMPT LPAREN expresion RPAREN PUNTOYCOMA
    (29) prompt -> . VAR ID IGUAL PROMPT LPAREN expresion COMA expresion RPAREN PUNTOYCOMA
    (30) imprimir -> . CONSOLE METODO LPAREN expresion RPAREN
    (31) metodo -> . ID METODO LPAREN RPAREN
    (32) metodo -> . ID METODO LPAREN expresion RPAREN
    (33) metodo -> . ID METODO LPAREN expresion COMA expresion RPAREN
    (34) metodo -> . ID METODO

    VAR             shift and go to state 12
    FOR             shift and go to state 16
    RLLAVE          reduce using rule 76 (empty -> .)
    IF              shift and go to state 17
    WHILE           shift and go to state 18
    CONSOLE         shift and go to state 19
    ID              shift and go to state 13

    sentencias                     shift and go to state 178
    variable                       shift and go to state 2
    metodos                        shift and go to state 3
    iteracion                      shift and go to state 4
    objeto                         shift and go to state 5
    newset                         shift and go to state 6
    array                          shift and go to state 7
    empty                          shift and go to state 8
    if                             shift and go to state 9
    while                          shift and go to state 10
    prompt                         shift and go to state 11
    imprimir                       shift and go to state 14
    metodo                         shift and go to state 15

state 173

    (25) elif -> ELIF LPAREN . condi_anidado RPAREN LLLAVE sentencias RLLAVE elif
    (26) elif -> ELIF LPAREN . condi_anidado RPAREN LLLAVE sentencias RLLAVE
    (60) condi_anidado -> . condicion AND condi_anidado
    (61) condi_anidado -> . NOT condicion AND condi_anidado
    (62) condi_anidado -> . condicion OR condi_anidado
    (63) condi_anidado -> . NOT condicion OR condi_anidado
    (64) condi_anidado -> . condicion
    (65) condi_anidado -> . NOT condicion
    (66) condicion -> . factor COMPARADOR factor
    (67) condicion -> . factor IGUALA factor
    (68) condicion -> . factor DIFERENTE factor
    (69) condicion -> . TRUE
    (70) condicion -> . FALSE
    (72) factor -> . LPAREN expresion RPAREN
    (73) factor -> . NUMBER
    (74) factor -> . TEXTO
    (75) factor -> . ID

    NOT             shift and go to state 46
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    LPAREN          shift and go to state 43
    NUMBER          shift and go to state 50
    TEXTO           shift and go to state 51
    ID              shift and go to state 52

    condi_anidado                  shift and go to state 179
    condicion                      shift and go to state 45
    factor                         shift and go to state 47

state 174

    (29) prompt -> VAR ID IGUAL PROMPT LPAREN expresion COMA expresion RPAREN PUNTOYCOMA .

    VAR             reduce using rule 29 (prompt -> VAR ID IGUAL PROMPT LPAREN expresion COMA expresion RPAREN PUNTOYCOMA .)
    FOR             reduce using rule 29 (prompt -> VAR ID IGUAL PROMPT LPAREN expresion COMA expresion RPAREN PUNTOYCOMA .)
    IF              reduce using rule 29 (prompt -> VAR ID IGUAL PROMPT LPAREN expresion COMA expresion RPAREN PUNTOYCOMA .)
    WHILE           reduce using rule 29 (prompt -> VAR ID IGUAL PROMPT LPAREN expresion COMA expresion RPAREN PUNTOYCOMA .)
    CONSOLE         reduce using rule 29 (prompt -> VAR ID IGUAL PROMPT LPAREN expresion COMA expresion RPAREN PUNTOYCOMA .)
    ID              reduce using rule 29 (prompt -> VAR ID IGUAL PROMPT LPAREN expresion COMA expresion RPAREN PUNTOYCOMA .)
    $end            reduce using rule 29 (prompt -> VAR ID IGUAL PROMPT LPAREN expresion COMA expresion RPAREN PUNTOYCOMA .)
    RLLAVE          reduce using rule 29 (prompt -> VAR ID IGUAL PROMPT LPAREN expresion COMA expresion RPAREN PUNTOYCOMA .)


state 175

    (16) iteracion -> FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL . RPAREN LLLAVE sentencias RLLAVE

    RPAREN          shift and go to state 180


state 176

    (18) iteracion -> FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES . NUMBER RPAREN LLLAVE sentencias RLLAVE

    NUMBER          shift and go to state 181


state 177

    (17) iteracion -> FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID . INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE
    (19) iteracion -> FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID . OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE

    INDECREMENTAL   shift and go to state 182
    OPERADORES      shift and go to state 183


state 178

    (24) else -> ELSE LLLAVE sentencias . RLLAVE

    RLLAVE          shift and go to state 184


state 179

    (25) elif -> ELIF LPAREN condi_anidado . RPAREN LLLAVE sentencias RLLAVE elif
    (26) elif -> ELIF LPAREN condi_anidado . RPAREN LLLAVE sentencias RLLAVE

    RPAREN          shift and go to state 185


state 180

    (16) iteracion -> FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN . LLLAVE sentencias RLLAVE

    LLLAVE          shift and go to state 186


state 181

    (18) iteracion -> FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER . RPAREN LLLAVE sentencias RLLAVE

    RPAREN          shift and go to state 187


state 182

    (17) iteracion -> FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL . RPAREN LLLAVE sentencias RLLAVE

    RPAREN          shift and go to state 188


state 183

    (19) iteracion -> FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES . NUMBER RPAREN LLLAVE sentencias RLLAVE

    NUMBER          shift and go to state 189


state 184

    (24) else -> ELSE LLLAVE sentencias RLLAVE .

    VAR             reduce using rule 24 (else -> ELSE LLLAVE sentencias RLLAVE .)
    FOR             reduce using rule 24 (else -> ELSE LLLAVE sentencias RLLAVE .)
    IF              reduce using rule 24 (else -> ELSE LLLAVE sentencias RLLAVE .)
    WHILE           reduce using rule 24 (else -> ELSE LLLAVE sentencias RLLAVE .)
    CONSOLE         reduce using rule 24 (else -> ELSE LLLAVE sentencias RLLAVE .)
    ID              reduce using rule 24 (else -> ELSE LLLAVE sentencias RLLAVE .)
    $end            reduce using rule 24 (else -> ELSE LLLAVE sentencias RLLAVE .)
    RLLAVE          reduce using rule 24 (else -> ELSE LLLAVE sentencias RLLAVE .)


state 185

    (25) elif -> ELIF LPAREN condi_anidado RPAREN . LLLAVE sentencias RLLAVE elif
    (26) elif -> ELIF LPAREN condi_anidado RPAREN . LLLAVE sentencias RLLAVE

    LLLAVE          shift and go to state 190


state 186

    (16) iteracion -> FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE . sentencias RLLAVE
    (1) sentencias -> . variable sentencias
    (2) sentencias -> . metodos sentencias
    (3) sentencias -> . iteracion sentencias
    (4) sentencias -> . objeto PUNTOYCOMA sentencias
    (5) sentencias -> . newset sentencias
    (6) sentencias -> . array sentencias
    (7) sentencias -> . empty
    (8) sentencias -> . if sentencias
    (9) sentencias -> . while sentencias
    (10) sentencias -> . prompt sentencias
    (13) variable -> . VAR ID PUNTOYCOMA
    (14) variable -> . VAR ID IGUAL expresion PUNTOYCOMA
    (15) variable -> . VAR ID IGUAL condi_anidado PUNTOYCOMA
    (11) metodos -> . imprimir PUNTOYCOMA
    (12) metodos -> . metodo PUNTOYCOMA
    (16) iteracion -> . FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE
    (17) iteracion -> . FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE
    (18) iteracion -> . FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE
    (19) iteracion -> . FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE
    (35) objeto -> . VAR ID IGUAL LLLAVE RLLAVE
    (36) objeto -> . VAR ID IGUAL LLLAVE keyvalue RLLAVE
    (45) newset -> . VAR ID IGUAL NEW SET LPAREN RPAREN PUNTOYCOMA
    (46) newset -> . VAR ID IGUAL NEW SET LPAREN contenido RPAREN PUNTOYCOMA
    (47) array -> . VAR ID IGUAL contenido PUNTOYCOMA
    (48) array -> . VAR ID IGUAL NEW ARRAY LPAREN elemento RPAREN PUNTOYCOMA
    (76) empty -> .
    (20) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE
    (21) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE else
    (22) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif
    (23) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif else
    (27) while -> . WHILE LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE
    (28) prompt -> . VAR ID IGUAL PROMPT LPAREN expresion RPAREN PUNTOYCOMA
    (29) prompt -> . VAR ID IGUAL PROMPT LPAREN expresion COMA expresion RPAREN PUNTOYCOMA
    (30) imprimir -> . CONSOLE METODO LPAREN expresion RPAREN
    (31) metodo -> . ID METODO LPAREN RPAREN
    (32) metodo -> . ID METODO LPAREN expresion RPAREN
    (33) metodo -> . ID METODO LPAREN expresion COMA expresion RPAREN
    (34) metodo -> . ID METODO

    VAR             shift and go to state 12
    FOR             shift and go to state 16
    RLLAVE          reduce using rule 76 (empty -> .)
    IF              shift and go to state 17
    WHILE           shift and go to state 18
    CONSOLE         shift and go to state 19
    ID              shift and go to state 13

    sentencias                     shift and go to state 191
    variable                       shift and go to state 2
    metodos                        shift and go to state 3
    iteracion                      shift and go to state 4
    objeto                         shift and go to state 5
    newset                         shift and go to state 6
    array                          shift and go to state 7
    empty                          shift and go to state 8
    if                             shift and go to state 9
    while                          shift and go to state 10
    prompt                         shift and go to state 11
    imprimir                       shift and go to state 14
    metodo                         shift and go to state 15

state 187

    (18) iteracion -> FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN . LLLAVE sentencias RLLAVE

    LLLAVE          shift and go to state 192


state 188

    (17) iteracion -> FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN . LLLAVE sentencias RLLAVE

    LLLAVE          shift and go to state 193


state 189

    (19) iteracion -> FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER . RPAREN LLLAVE sentencias RLLAVE

    RPAREN          shift and go to state 194


state 190

    (25) elif -> ELIF LPAREN condi_anidado RPAREN LLLAVE . sentencias RLLAVE elif
    (26) elif -> ELIF LPAREN condi_anidado RPAREN LLLAVE . sentencias RLLAVE
    (1) sentencias -> . variable sentencias
    (2) sentencias -> . metodos sentencias
    (3) sentencias -> . iteracion sentencias
    (4) sentencias -> . objeto PUNTOYCOMA sentencias
    (5) sentencias -> . newset sentencias
    (6) sentencias -> . array sentencias
    (7) sentencias -> . empty
    (8) sentencias -> . if sentencias
    (9) sentencias -> . while sentencias
    (10) sentencias -> . prompt sentencias
    (13) variable -> . VAR ID PUNTOYCOMA
    (14) variable -> . VAR ID IGUAL expresion PUNTOYCOMA
    (15) variable -> . VAR ID IGUAL condi_anidado PUNTOYCOMA
    (11) metodos -> . imprimir PUNTOYCOMA
    (12) metodos -> . metodo PUNTOYCOMA
    (16) iteracion -> . FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE
    (17) iteracion -> . FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE
    (18) iteracion -> . FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE
    (19) iteracion -> . FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE
    (35) objeto -> . VAR ID IGUAL LLLAVE RLLAVE
    (36) objeto -> . VAR ID IGUAL LLLAVE keyvalue RLLAVE
    (45) newset -> . VAR ID IGUAL NEW SET LPAREN RPAREN PUNTOYCOMA
    (46) newset -> . VAR ID IGUAL NEW SET LPAREN contenido RPAREN PUNTOYCOMA
    (47) array -> . VAR ID IGUAL contenido PUNTOYCOMA
    (48) array -> . VAR ID IGUAL NEW ARRAY LPAREN elemento RPAREN PUNTOYCOMA
    (76) empty -> .
    (20) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE
    (21) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE else
    (22) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif
    (23) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif else
    (27) while -> . WHILE LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE
    (28) prompt -> . VAR ID IGUAL PROMPT LPAREN expresion RPAREN PUNTOYCOMA
    (29) prompt -> . VAR ID IGUAL PROMPT LPAREN expresion COMA expresion RPAREN PUNTOYCOMA
    (30) imprimir -> . CONSOLE METODO LPAREN expresion RPAREN
    (31) metodo -> . ID METODO LPAREN RPAREN
    (32) metodo -> . ID METODO LPAREN expresion RPAREN
    (33) metodo -> . ID METODO LPAREN expresion COMA expresion RPAREN
    (34) metodo -> . ID METODO

    VAR             shift and go to state 12
    FOR             shift and go to state 16
    RLLAVE          reduce using rule 76 (empty -> .)
    IF              shift and go to state 17
    WHILE           shift and go to state 18
    CONSOLE         shift and go to state 19
    ID              shift and go to state 13

    sentencias                     shift and go to state 195
    variable                       shift and go to state 2
    metodos                        shift and go to state 3
    iteracion                      shift and go to state 4
    objeto                         shift and go to state 5
    newset                         shift and go to state 6
    array                          shift and go to state 7
    empty                          shift and go to state 8
    if                             shift and go to state 9
    while                          shift and go to state 10
    prompt                         shift and go to state 11
    imprimir                       shift and go to state 14
    metodo                         shift and go to state 15

state 191

    (16) iteracion -> FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias . RLLAVE

    RLLAVE          shift and go to state 196


state 192

    (18) iteracion -> FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE . sentencias RLLAVE
    (1) sentencias -> . variable sentencias
    (2) sentencias -> . metodos sentencias
    (3) sentencias -> . iteracion sentencias
    (4) sentencias -> . objeto PUNTOYCOMA sentencias
    (5) sentencias -> . newset sentencias
    (6) sentencias -> . array sentencias
    (7) sentencias -> . empty
    (8) sentencias -> . if sentencias
    (9) sentencias -> . while sentencias
    (10) sentencias -> . prompt sentencias
    (13) variable -> . VAR ID PUNTOYCOMA
    (14) variable -> . VAR ID IGUAL expresion PUNTOYCOMA
    (15) variable -> . VAR ID IGUAL condi_anidado PUNTOYCOMA
    (11) metodos -> . imprimir PUNTOYCOMA
    (12) metodos -> . metodo PUNTOYCOMA
    (16) iteracion -> . FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE
    (17) iteracion -> . FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE
    (18) iteracion -> . FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE
    (19) iteracion -> . FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE
    (35) objeto -> . VAR ID IGUAL LLLAVE RLLAVE
    (36) objeto -> . VAR ID IGUAL LLLAVE keyvalue RLLAVE
    (45) newset -> . VAR ID IGUAL NEW SET LPAREN RPAREN PUNTOYCOMA
    (46) newset -> . VAR ID IGUAL NEW SET LPAREN contenido RPAREN PUNTOYCOMA
    (47) array -> . VAR ID IGUAL contenido PUNTOYCOMA
    (48) array -> . VAR ID IGUAL NEW ARRAY LPAREN elemento RPAREN PUNTOYCOMA
    (76) empty -> .
    (20) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE
    (21) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE else
    (22) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif
    (23) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif else
    (27) while -> . WHILE LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE
    (28) prompt -> . VAR ID IGUAL PROMPT LPAREN expresion RPAREN PUNTOYCOMA
    (29) prompt -> . VAR ID IGUAL PROMPT LPAREN expresion COMA expresion RPAREN PUNTOYCOMA
    (30) imprimir -> . CONSOLE METODO LPAREN expresion RPAREN
    (31) metodo -> . ID METODO LPAREN RPAREN
    (32) metodo -> . ID METODO LPAREN expresion RPAREN
    (33) metodo -> . ID METODO LPAREN expresion COMA expresion RPAREN
    (34) metodo -> . ID METODO

    VAR             shift and go to state 12
    FOR             shift and go to state 16
    RLLAVE          reduce using rule 76 (empty -> .)
    IF              shift and go to state 17
    WHILE           shift and go to state 18
    CONSOLE         shift and go to state 19
    ID              shift and go to state 13

    sentencias                     shift and go to state 197
    variable                       shift and go to state 2
    metodos                        shift and go to state 3
    iteracion                      shift and go to state 4
    objeto                         shift and go to state 5
    newset                         shift and go to state 6
    array                          shift and go to state 7
    empty                          shift and go to state 8
    if                             shift and go to state 9
    while                          shift and go to state 10
    prompt                         shift and go to state 11
    imprimir                       shift and go to state 14
    metodo                         shift and go to state 15

state 193

    (17) iteracion -> FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE . sentencias RLLAVE
    (1) sentencias -> . variable sentencias
    (2) sentencias -> . metodos sentencias
    (3) sentencias -> . iteracion sentencias
    (4) sentencias -> . objeto PUNTOYCOMA sentencias
    (5) sentencias -> . newset sentencias
    (6) sentencias -> . array sentencias
    (7) sentencias -> . empty
    (8) sentencias -> . if sentencias
    (9) sentencias -> . while sentencias
    (10) sentencias -> . prompt sentencias
    (13) variable -> . VAR ID PUNTOYCOMA
    (14) variable -> . VAR ID IGUAL expresion PUNTOYCOMA
    (15) variable -> . VAR ID IGUAL condi_anidado PUNTOYCOMA
    (11) metodos -> . imprimir PUNTOYCOMA
    (12) metodos -> . metodo PUNTOYCOMA
    (16) iteracion -> . FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE
    (17) iteracion -> . FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE
    (18) iteracion -> . FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE
    (19) iteracion -> . FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE
    (35) objeto -> . VAR ID IGUAL LLLAVE RLLAVE
    (36) objeto -> . VAR ID IGUAL LLLAVE keyvalue RLLAVE
    (45) newset -> . VAR ID IGUAL NEW SET LPAREN RPAREN PUNTOYCOMA
    (46) newset -> . VAR ID IGUAL NEW SET LPAREN contenido RPAREN PUNTOYCOMA
    (47) array -> . VAR ID IGUAL contenido PUNTOYCOMA
    (48) array -> . VAR ID IGUAL NEW ARRAY LPAREN elemento RPAREN PUNTOYCOMA
    (76) empty -> .
    (20) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE
    (21) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE else
    (22) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif
    (23) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif else
    (27) while -> . WHILE LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE
    (28) prompt -> . VAR ID IGUAL PROMPT LPAREN expresion RPAREN PUNTOYCOMA
    (29) prompt -> . VAR ID IGUAL PROMPT LPAREN expresion COMA expresion RPAREN PUNTOYCOMA
    (30) imprimir -> . CONSOLE METODO LPAREN expresion RPAREN
    (31) metodo -> . ID METODO LPAREN RPAREN
    (32) metodo -> . ID METODO LPAREN expresion RPAREN
    (33) metodo -> . ID METODO LPAREN expresion COMA expresion RPAREN
    (34) metodo -> . ID METODO

    VAR             shift and go to state 12
    FOR             shift and go to state 16
    RLLAVE          reduce using rule 76 (empty -> .)
    IF              shift and go to state 17
    WHILE           shift and go to state 18
    CONSOLE         shift and go to state 19
    ID              shift and go to state 13

    sentencias                     shift and go to state 198
    variable                       shift and go to state 2
    metodos                        shift and go to state 3
    iteracion                      shift and go to state 4
    objeto                         shift and go to state 5
    newset                         shift and go to state 6
    array                          shift and go to state 7
    empty                          shift and go to state 8
    if                             shift and go to state 9
    while                          shift and go to state 10
    prompt                         shift and go to state 11
    imprimir                       shift and go to state 14
    metodo                         shift and go to state 15

state 194

    (19) iteracion -> FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN . LLLAVE sentencias RLLAVE

    LLLAVE          shift and go to state 199


state 195

    (25) elif -> ELIF LPAREN condi_anidado RPAREN LLLAVE sentencias . RLLAVE elif
    (26) elif -> ELIF LPAREN condi_anidado RPAREN LLLAVE sentencias . RLLAVE

    RLLAVE          shift and go to state 200


state 196

    (16) iteracion -> FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE .

    VAR             reduce using rule 16 (iteracion -> FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE .)
    FOR             reduce using rule 16 (iteracion -> FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE .)
    IF              reduce using rule 16 (iteracion -> FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE .)
    WHILE           reduce using rule 16 (iteracion -> FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE .)
    CONSOLE         reduce using rule 16 (iteracion -> FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE .)
    ID              reduce using rule 16 (iteracion -> FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE .)
    $end            reduce using rule 16 (iteracion -> FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE .)
    RLLAVE          reduce using rule 16 (iteracion -> FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE .)


state 197

    (18) iteracion -> FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias . RLLAVE

    RLLAVE          shift and go to state 201


state 198

    (17) iteracion -> FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias . RLLAVE

    RLLAVE          shift and go to state 202


state 199

    (19) iteracion -> FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE . sentencias RLLAVE
    (1) sentencias -> . variable sentencias
    (2) sentencias -> . metodos sentencias
    (3) sentencias -> . iteracion sentencias
    (4) sentencias -> . objeto PUNTOYCOMA sentencias
    (5) sentencias -> . newset sentencias
    (6) sentencias -> . array sentencias
    (7) sentencias -> . empty
    (8) sentencias -> . if sentencias
    (9) sentencias -> . while sentencias
    (10) sentencias -> . prompt sentencias
    (13) variable -> . VAR ID PUNTOYCOMA
    (14) variable -> . VAR ID IGUAL expresion PUNTOYCOMA
    (15) variable -> . VAR ID IGUAL condi_anidado PUNTOYCOMA
    (11) metodos -> . imprimir PUNTOYCOMA
    (12) metodos -> . metodo PUNTOYCOMA
    (16) iteracion -> . FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE
    (17) iteracion -> . FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE
    (18) iteracion -> . FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE
    (19) iteracion -> . FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE
    (35) objeto -> . VAR ID IGUAL LLLAVE RLLAVE
    (36) objeto -> . VAR ID IGUAL LLLAVE keyvalue RLLAVE
    (45) newset -> . VAR ID IGUAL NEW SET LPAREN RPAREN PUNTOYCOMA
    (46) newset -> . VAR ID IGUAL NEW SET LPAREN contenido RPAREN PUNTOYCOMA
    (47) array -> . VAR ID IGUAL contenido PUNTOYCOMA
    (48) array -> . VAR ID IGUAL NEW ARRAY LPAREN elemento RPAREN PUNTOYCOMA
    (76) empty -> .
    (20) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE
    (21) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE else
    (22) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif
    (23) if -> . IF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif else
    (27) while -> . WHILE LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE
    (28) prompt -> . VAR ID IGUAL PROMPT LPAREN expresion RPAREN PUNTOYCOMA
    (29) prompt -> . VAR ID IGUAL PROMPT LPAREN expresion COMA expresion RPAREN PUNTOYCOMA
    (30) imprimir -> . CONSOLE METODO LPAREN expresion RPAREN
    (31) metodo -> . ID METODO LPAREN RPAREN
    (32) metodo -> . ID METODO LPAREN expresion RPAREN
    (33) metodo -> . ID METODO LPAREN expresion COMA expresion RPAREN
    (34) metodo -> . ID METODO

    VAR             shift and go to state 12
    FOR             shift and go to state 16
    RLLAVE          reduce using rule 76 (empty -> .)
    IF              shift and go to state 17
    WHILE           shift and go to state 18
    CONSOLE         shift and go to state 19
    ID              shift and go to state 13

    sentencias                     shift and go to state 203
    variable                       shift and go to state 2
    metodos                        shift and go to state 3
    iteracion                      shift and go to state 4
    objeto                         shift and go to state 5
    newset                         shift and go to state 6
    array                          shift and go to state 7
    empty                          shift and go to state 8
    if                             shift and go to state 9
    while                          shift and go to state 10
    prompt                         shift and go to state 11
    imprimir                       shift and go to state 14
    metodo                         shift and go to state 15

state 200

    (25) elif -> ELIF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE . elif
    (26) elif -> ELIF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE .
    (25) elif -> . ELIF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif
    (26) elif -> . ELIF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE

    ELSE            reduce using rule 26 (elif -> ELIF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE .)
    VAR             reduce using rule 26 (elif -> ELIF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE .)
    FOR             reduce using rule 26 (elif -> ELIF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE .)
    IF              reduce using rule 26 (elif -> ELIF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE .)
    WHILE           reduce using rule 26 (elif -> ELIF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE .)
    CONSOLE         reduce using rule 26 (elif -> ELIF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE .)
    ID              reduce using rule 26 (elif -> ELIF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE .)
    $end            reduce using rule 26 (elif -> ELIF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE .)
    RLLAVE          reduce using rule 26 (elif -> ELIF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE .)
    ELIF            shift and go to state 161

    elif                           shift and go to state 204

state 201

    (18) iteracion -> FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE .

    VAR             reduce using rule 18 (iteracion -> FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE .)
    FOR             reduce using rule 18 (iteracion -> FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE .)
    IF              reduce using rule 18 (iteracion -> FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE .)
    WHILE           reduce using rule 18 (iteracion -> FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE .)
    CONSOLE         reduce using rule 18 (iteracion -> FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE .)
    ID              reduce using rule 18 (iteracion -> FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE .)
    $end            reduce using rule 18 (iteracion -> FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE .)
    RLLAVE          reduce using rule 18 (iteracion -> FOR LPAREN ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE .)


state 202

    (17) iteracion -> FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE .

    VAR             reduce using rule 17 (iteracion -> FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE .)
    FOR             reduce using rule 17 (iteracion -> FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE .)
    IF              reduce using rule 17 (iteracion -> FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE .)
    WHILE           reduce using rule 17 (iteracion -> FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE .)
    CONSOLE         reduce using rule 17 (iteracion -> FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE .)
    ID              reduce using rule 17 (iteracion -> FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE .)
    $end            reduce using rule 17 (iteracion -> FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE .)
    RLLAVE          reduce using rule 17 (iteracion -> FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID INDECREMENTAL RPAREN LLLAVE sentencias RLLAVE .)


state 203

    (19) iteracion -> FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias . RLLAVE

    RLLAVE          shift and go to state 205


state 204

    (25) elif -> ELIF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif .

    ELSE            reduce using rule 25 (elif -> ELIF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif .)
    VAR             reduce using rule 25 (elif -> ELIF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif .)
    FOR             reduce using rule 25 (elif -> ELIF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif .)
    IF              reduce using rule 25 (elif -> ELIF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif .)
    WHILE           reduce using rule 25 (elif -> ELIF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif .)
    CONSOLE         reduce using rule 25 (elif -> ELIF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif .)
    ID              reduce using rule 25 (elif -> ELIF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif .)
    $end            reduce using rule 25 (elif -> ELIF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif .)
    RLLAVE          reduce using rule 25 (elif -> ELIF LPAREN condi_anidado RPAREN LLLAVE sentencias RLLAVE elif .)


state 205

    (19) iteracion -> FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE .

    VAR             reduce using rule 19 (iteracion -> FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE .)
    FOR             reduce using rule 19 (iteracion -> FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE .)
    IF              reduce using rule 19 (iteracion -> FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE .)
    WHILE           reduce using rule 19 (iteracion -> FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE .)
    CONSOLE         reduce using rule 19 (iteracion -> FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE .)
    ID              reduce using rule 19 (iteracion -> FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE .)
    $end            reduce using rule 19 (iteracion -> FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE .)
    RLLAVE          reduce using rule 19 (iteracion -> FOR LPAREN VAR ID IGUAL NUMBER PUNTOYCOMA condicion PUNTOYCOMA ID OPERADORES NUMBER RPAREN LLLAVE sentencias RLLAVE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RCORCH in state 95 resolved as shift
